{"version":3,"sources":["app.js","reportwebvitals.js","index.js"],"names":["App","activeTab","setActiveTab","useState","resources","setResources","name","key","value","perSec","workers","setWorkers","level","setLevel","exp","setExp","collecting","setCollecting","cooldown","setCooldown","logs","setLogs","buildings","setBuildings","population","setPopulation","specialMaterials","setSpecialMaterials","fur","meat","scale","tooth","weather","setWeather","temp","desc","tick","dead","setDead","collectProgressTimerRef","React","useRef","collectActionTimeoutRef","levelStages","maxLevel","getStage","lv","getStageExp","addLog","msg","slice","collectResource","cooldownDuration","start","Date","now","current","clearInterval","clearTimeout","setInterval","elapsed","progress","Math","max","setTimeout","_resources$find","selectedKey","resourceTiers","weight","availableTierResources","totalWeight","reduce","sum","r","rand","random","i","length","rs","map","find","prevExp","nextExp","nextLevel","stageExp","changed","hireWorker","idx","w","alert","buildHouse","bs","b","type","count","addWood","wood","useEffect","interval","_buildings$find","floor","min","houseCount","currentResources","newResources","toFixed","some","collectedResource","amountCollected","nextLevelCandidate","levelDidChange","buildOrUpgradeBuilding","woodResource","stoneResource","ironResource","p","triggerTrapOrHunt","trapBuilding","trapLevel","sm","hunterLodge","hunterLevel","createElement","className","style","padding","fontFamily","display","flexDirection","alignItems","justifyContent","width","minHeight","marginRight","background","border","borderRadius","textAlign","fontSize","color","overflowY","height","fontWeight","marginBottom","margin","listStyle","log","opacity","maxWidth","flex","minWidth","tab","isAdventure","isBuilding","locked","onClick","disabled","backgroundColor","borderBottom","boxShadow","position","top","title","marginLeft","renderTabContent","overflow","left","bottom","transition","zIndex","pointerEvents","marginTop","Fragment","adventureUnlockLevelTab","borderCollapse","filter","paddingTop","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAsoBeA,MAnoBf,WAEE,MAAOC,EAAWC,GAAgBC,mBAAS,iBAYpCC,EAAWC,GAAgBF,mBAPT,CACvB,CAAEG,KAAM,qBAAOC,IAAK,OAAQC,MAAO,EAAGC,OAAQ,GAC9C,CAAEH,KAAM,qBAAOC,IAAK,SAAUC,MAAO,EAAGC,OAAQ,GAChD,CAAEH,KAAM,eAAMC,IAAK,OAAQC,MAAO,EAAGC,OAAQ,GAC7C,CAAEH,KAAM,eAAMC,IAAK,QAASC,MAAO,EAAGC,OAAQ,GAC9C,CAAEH,KAAM,eAAMC,IAAK,OAAQC,MAAO,EAAGC,OAAQ,MAGxCC,EAASC,GAAcR,mBAAS,IAChCS,EAAOC,GAAYV,mBAAS,IAC5BW,EAAKC,GAAUZ,mBAAS,IACxBa,EAAYC,GAAiBd,oBAAS,IACtCe,EAAUC,GAAehB,mBAAS,IAElCiB,EAAMC,GAAWlB,mBAAS,CAAC,oCAE3BmB,EAAWC,GAAgBpB,mBAAS,KAEpCqB,EAAYC,GAAiBtB,mBAAS,IACtCuB,EAAkBC,GAAuBxB,mBAAS,CAACyB,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,KAE9EC,EAASC,GAAc9B,mBAAS,CAAE+B,KAAM,GAAIC,KAAM,eAAMC,KAAM,KAC9DC,EAAMC,GAAWnC,oBAAS,GAC3BoC,EAA0BC,IAAMC,OAAO,MACvCC,EAA0BF,IAAMC,OAAO,MAEvCE,EAAc,CAClB,CAAErC,KAAM,eAAMsC,SAAU,EAAG9B,IAAK,KAChC,CAAER,KAAM,eAAMsC,SAAU,EAAG9B,IAAK,KAChC,CAAER,KAAM,eAAMsC,SAAU,GAAI9B,IAAK,MAE7B+B,EAAYC,GACZA,EAAK,EAAUH,EAAY,GAC3BG,EAAK,EAAUH,EAAY,GACxBA,EAAY,GAGfI,EAAeD,GAAOD,EAASC,GAAIhC,IAUnCkC,EAAUC,GAAQ5B,EAAQD,GAAQ,CAAC6B,KAAQ7B,EAAK8B,MAAM,EAAG,MAEzDC,EAAkBA,KACtB,GAAId,GAAQrB,EAAY,OAExBC,GAAc,GACdE,EAAY,GACZ,MAAMiC,EAdFxC,GAAS,EAAU,IACnBA,GAAS,EAAU,KAAqB,KAAbA,EAAQ,GACnCA,GAAS,EAAU,KAAqB,KAAbA,EAAQ,GAChC,KAAqB,KAAbA,EAAQ,GAYjByC,EAAQC,KAAKC,MAGfhB,EAAwBiB,UAC1BC,cAAclB,EAAwBiB,SACtCjB,EAAwBiB,QAAU,MAEhCd,EAAwBc,UAC1BE,aAAahB,EAAwBc,SACrCd,EAAwBc,QAAU,MAGpCjB,EAAwBiB,QAAUG,YAAY,KAC5C,MAAMC,EAAUN,KAAKC,MAAQF,EACvBQ,EAAWC,KAAKC,IAAI,EAAG,EAAIH,EAAUR,GAC3CjC,EAAY0C,GACRD,GAAWR,IACbK,cAAclB,EAAwBiB,SACtCjB,EAAwBiB,QAAU,KAClCrC,EAAY,KAEb,IAEHuB,EAAwBc,QAAUQ,WAAW,KAAM,IAAAC,EAMjD,IAAIC,EAAc,OAClB,GAAItD,EAAQ,EAAG,CAEb,MAAMuD,EAAgB,CAEpB,CACE,CAAE5D,IAAK,OAAQ6D,OAAQ,MAGzB,CACE,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,QAAS6D,OAAQ,IACxB,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,SAAU6D,OAAQ,IACzB,CAAE7D,IAAK,OAAQ6D,OAAQ,IAGzB,CACE,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,SAAU6D,OAAQ,IACzB,CAAE7D,IAAK,QAAS6D,OAAQ,IACxB,CAAE7D,IAAK,OAAQ6D,OAAQ,MAI3B,IAAIC,EAAyB,GAU7B,MAAMC,GARJD,EADEzD,GAAS,GACcuD,EAAc,GAC9BvD,GAAS,GACOuD,EAAc,GAEdA,EAAc,IAIEI,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEL,OAAQ,GAC9E,IAAIM,EAAOZ,KAAKa,SAAWL,EAC3B,IAAK,IAAIM,EAAI,EAAGA,EAAIP,EAAuBQ,OAAQD,IAEjD,IADAF,GAAQL,EAAuBO,GAAGR,SACtB,EAAG,CACbF,EAAcG,EAAuBO,GAAGrE,IACxC,YAKJ2D,EAAc,OAEhB7D,EAAayE,GAAMA,EAAGC,IAAIN,GAAKA,EAAElE,MAAQ2D,EAAc,IAAKO,EAAGjE,MAAOiE,EAAEjE,MAAQ,GAAMiE,IACtFzB,oCAAqD,QAAtCiB,EAAA7D,EAAU4E,KAAKP,GAAGA,EAAElE,MAAM2D,UAAY,IAAAD,OAAA,EAAtCA,EAAwC3D,OAAM4D,KAE7DnD,EAAOkE,IACL,IAAIC,EAAUD,EAAU,GACpBE,EAAYvE,EACZwE,EAAWrC,EAAYoC,GACvBE,GAAU,EACd,KAAOH,GAAWE,GAChBF,GAAWE,EAEXA,EAAWrC,EADXoC,GAAa,GAEbE,GAAU,EAGZ,OADIA,GAASxE,EAASsE,GACfD,IAETjE,GAAc,GACdyB,EAAwBc,QAAU,MACjCJ,IAICkC,EAAaA,KACbjD,IACAjC,EAAU,GAAGI,OAAS,IACxBH,EAAayE,GAAMA,EAAGC,IAAI,CAACN,EAAGc,IACjB,IAARA,EAAkB,IAAKd,EAAGjE,MAAOiE,EAAEjE,MAAQ,IACnC,IAAR+E,EAAkB,IAAKd,EAAGhE,OAAQgE,EAAEhE,OAAS,IACrC,IAAR8E,EAAkB,IAAKd,EAAGhE,OAAQgE,EAAEhE,OAAS,IACrC,IAAR8E,EAAkB,IAAKd,EAAGhE,OAAQgE,EAAEhE,OAAS,IACrC,IAAR8E,EAAkB,IAAKd,EAAGhE,OAAQgE,EAAEhE,OAAS,KACzCgE,IAET9D,EAAW6E,GAAKA,EAAI,GACpB3E,EAASiC,GAAMA,EAAK,GACpBE,EAAO,+CAEPyC,MAAM,8DAIJC,EAAaA,KACbrD,IACAjC,EAAU,GAAGI,OAAS,IAAMJ,EAAU,GAAGI,OAAS,IACpDH,EAAayE,GAAMA,EAAGC,IAAI,CAACN,EAAGc,IACjB,SAARd,EAAElE,IAAqB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IACxC,UAARiE,EAAElE,IAAsB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IAC7CiE,IAETlD,EAAaoE,GACGA,EAAGX,KAAKY,GAAY,UAATA,EAAEC,MACVF,EAAGZ,IAAIa,GAAY,UAATA,EAAEC,KAAe,IAAID,EAAEE,MAAMF,EAAEE,MAAM,GAAGF,GAC5D,IAAID,EAAI,CAACE,KAAK,QAASC,MAAM,KAEtC9C,EAAO,qDAEPyC,MAAM,kFAIJM,EAAUA,KACd,GAAI1D,EAAM,OACV,MAAM2D,EAAO5F,EAAU4E,KAAKP,GAAe,SAAVA,EAAElE,KAC/ByF,GAAQA,EAAKxF,OAAS,GACxBH,EAAayE,GAAMA,EAAGC,IAAIN,GAAe,SAAVA,EAAElE,IAAiB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,GAAMiE,IACjFxC,EAAWuD,IAAC,IAAUA,EAAGtD,KAAMsD,EAAEtD,KAAO,KACxCc,EAAO,2FAEPyC,MAAM,6EAIVQ,oBAAU,KACR,GAAG5D,EAAM,OACT,MAAM6D,EAAWvC,YAAY,KAC3B1B,EAAWuD,IAAK,IAAAW,EACd,IAAI/D,EAAOoD,EAAEpD,KAAO,EAChBF,EAAOsD,EAAEtD,KACTC,EAAOqD,EAAErD,KAEb,GAAGC,EAAO,KAAO,EAAG,CAClB,MAAMqC,EAAIX,KAAKa,SACZF,EAAI,IAAOvC,EAAO4B,KAAKC,KAAK,GAAI7B,EAAO4B,KAAKsC,MAAoB,EAAdtC,KAAKa,SAAW,IAAKxC,EAAO,sBACzEsC,EAAI,IAAOvC,EAAO4B,KAAKC,KAAK,GAAI7B,EAAO4B,KAAKsC,MAAoB,EAAdtC,KAAKa,SAAW,IAAKxC,EAAO,iBAC/ED,EAAO4B,KAAKuC,IAAI,GAAInE,EAAO4B,KAAKsC,MAAoB,EAAdtC,KAAKa,WAAcxC,EAAO,gBACvEa,mCAAeb,sBAAUD,WAG3B,IAAIoE,GAAgD,QAAnCH,EAAA7E,EAAU0D,KAAKY,GAAY,UAATA,EAAEC,aAAe,IAAAM,OAAA,EAAnCA,EAAqCL,QAAO,EAK7D,OAJG5D,IAAS,IAAqB,IAAfoE,IAChBhE,GAAQ,GACRU,EAAO,uEAEF,CAAEd,OAAMC,OAAMC,WAEtB,KACH,MAAO,IAAMqB,cAAcyC,IAC1B,CAAC7D,EAAMf,IAGV2E,oBAAU,KACR,IAAI5D,GAGA3B,EAAU,EAAG,CACf,MAAMwF,EAAWvC,YAAY,KAC3BtD,EAAakG,IAEX,IAAIrC,EAAc,OAClB,GAAItD,EAAQ,EAAG,CAKb,MAAMuD,EAAgB,CACpB,CACE,CAAE5D,IAAK,OAAQ6D,OAAQ,KAEzB,CACE,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,QAAS6D,OAAQ,IACxB,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,SAAU6D,OAAQ,IACzB,CAAE7D,IAAK,OAAQ6D,OAAQ,IAEzB,CACE,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,OAAQ6D,OAAQ,IACvB,CAAE7D,IAAK,SAAU6D,OAAQ,IACzB,CAAE7D,IAAK,QAAS6D,OAAQ,IACxB,CAAE7D,IAAK,OAAQ6D,OAAQ,MAG3B,IAAIC,EAAyB,GAQ7B,MAAMC,GANJD,EADEzD,GAAS,GACcuD,EAAc,GAC9BvD,GAAS,GACOuD,EAAc,GAEdA,EAAc,IAEEI,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEL,OAAQ,GAC9E,IAAIM,EAAOZ,KAAKa,SAAWL,EAC3B,IAAK,IAAIM,EAAI,EAAGA,EAAIP,EAAuBQ,OAAQD,IAEjD,IADAF,GAAQL,EAAuBO,GAAGR,SACtB,EAAG,CACbF,EAAcG,EAAuBO,GAAGrE,IACxC,YAIJ2D,EAAc,OAGhB,MAAMsC,EAAeD,EAAiBxB,IAAIN,GAAKA,EAAElE,MAAQ2D,EAAc,IAAKO,EAAGjE,QAASiE,EAAEjE,OAASiE,EAAEhE,OAAS,EAAIgE,EAAEhE,OAAS,IAAIgG,QAAQ,IAAOhC,GAEhJ,GAAI+B,EAAaE,KAAK,CAACjC,EAAGc,IAAQiB,EAAajB,GAAK/E,MAAQ+F,EAAiBhB,GAAK/E,OAAQ,CACxF,MAAMmG,EAAoBH,EAAaxB,KAAKP,GAAKA,EAAElE,MAAQ2D,GAC3D,GAAIyC,EAAmB,CACrB,MAAMC,KAAsBD,EAAkBlG,OAAS,EAAIkG,EAAkBlG,OAAS,GAAKC,GAAU+F,QAAQ,GAC7GzD,4DAAoB4D,KAAmBD,EAAkBrG,MAAQ4D,WAEnEnD,EAAOkE,IACL,IACIC,EAAUD,EAAU,EAAIvE,EACxBmG,EAFyBjG,EAGzBwE,EAAWrC,EAAY8D,GACvBC,GAAiB,EACrB,KAAO5B,GAAWE,GAChBF,GAAWE,EAEXA,EAAWrC,EADX8D,GAAsB,GAEtBC,GAAiB,EAKnB,OAHIA,GACFjG,EAASgG,GAEJ3B,IAGX,OAAOsB,KAER,KACH,MAAO,IAAM/C,cAAcyC,KAE5B,CAACxF,EAASE,EAAOyB,EAAMW,EAAQ5C,IAGlC6F,oBAAU,KACJ5D,IACEE,EAAwBiB,UAC1BC,cAAclB,EAAwBiB,SACtCjB,EAAwBiB,QAAU,MAEhCd,EAAwBc,UAC1BE,aAAahB,EAAwBc,SACrCd,EAAwBc,QAAU,MAGpCvC,GAAc,GACdE,EAAY,IAGP,KACDoB,EAAwBiB,SAC1BC,cAAclB,EAAwBiB,SAEpCd,EAAwBc,SAC1BE,aAAahB,EAAwBc,WAGxC,CAACnB,IAGJ,MAAM0E,EAA0BlB,IAC9B,GAAIxD,EAAM,OACV,MAAM2E,EAAe5G,EAAU4E,KAAKP,GAAe,SAAVA,EAAElE,KACrC0G,EAAgB7G,EAAU4E,KAAKP,GAAe,UAAVA,EAAElE,KACtC2G,EAAe9G,EAAU4E,KAAKP,GAAe,SAAVA,EAAElE,KAE9B,SAATsF,EACEmB,GAAgBA,EAAaxG,OAAS,IAAMyG,GAAiBA,EAAczG,OAAS,GACtFH,EAAayE,GAAMA,EAAGC,IAAIN,GACV,SAAVA,EAAElE,IAAuB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IACxC,UAAViE,EAAElE,IAAwB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,GAChDiE,IAETlD,EAAaoE,GACGA,EAAGX,KAAKY,GAAgB,SAAXA,EAAEC,MACXF,EAAGZ,IAAIa,GAAgB,SAAXA,EAAEC,KAAkB,IAAKD,EAAGhF,OAAQgF,EAAEhF,OAAS,GAAK,GAAMgF,GACjF,IAAID,EAAI,CAAEE,KAAM,OAAQjF,MAAO,KAExCoC,EAAO,sDAEPyC,MAAM,4FAEU,cAATI,EACLmB,GAAgBA,EAAaxG,OAAS,IAAMyG,GAAiBA,EAAczG,OAAS,IACtFH,EAAayE,GAAMA,EAAGC,IAAIN,GACV,SAAVA,EAAElE,IAAuB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IACxC,UAAViE,EAAElE,IAAwB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IAChDiE,IAETlD,EAAaoE,GACGA,EAAGX,KAAKY,GAAgB,cAAXA,EAAEC,MACXF,EAAGZ,IAAIa,GAAgB,cAAXA,EAAEC,KAAuB,IAAKD,EAAGhF,OAAQgF,EAAEhF,OAAS,GAAK,GAAMgF,GACtF,IAAID,EAAI,CAAEE,KAAM,YAAajF,MAAO,KAE7Ca,EAAc0F,GAAKA,EAAI,GACvBnE,EAAO,6EAEPyC,MAAM,oEAEU,WAATI,IACLmB,GAAgBA,EAAaxG,OAAS,IAAM0G,GAAgBA,EAAa1G,OAAS,IACpFH,EAAayE,GAAMA,EAAGC,IAAIN,GACV,SAAVA,EAAElE,IAAuB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IACxC,SAAViE,EAAElE,IAAuB,IAAKkE,EAAGjE,MAAOiE,EAAEjE,MAAQ,IAC/CiE,IAETlD,EAAaoE,GACGA,EAAGX,KAAKY,GAAgB,WAAXA,EAAEC,MACXF,EAAGZ,IAAIa,GAAgB,WAAXA,EAAEC,KAAoB,IAAKD,EAAGhF,OAAQgF,EAAEhF,OAAS,GAAK,GAAMgF,GACnF,IAAID,EAAI,CAAEE,KAAM,SAAUjF,MAAO,KAE1CoC,EAAO,kEAEPyC,MAAM,iHAKN2B,EAAqBvB,IACzB,GAAa,SAATA,EAAiB,CACnB,MAAMwB,EAAe/F,EAAU0D,KAAKY,GAAgB,SAAXA,EAAEC,MAC3C,IAAKwB,EAEH,YADA5B,MAAM,8CAGR,MAAM6B,EAAYD,EAAazG,OAAS,EAC3BkD,KAAKa,SACP,GAAM,IAAO2C,EAAY,IAClC3F,EAAoB4F,IAAE,IAAUA,EAAI3F,IAAK2F,EAAG3F,IAAM,EAAGC,KAAM0F,EAAG1F,KAAO,KACrEmB,EAAO,uHAEPA,EAAO,qEAEJ,GAAa,WAAT6C,EAAmB,CAC5B,MAAM2B,EAAclG,EAAU0D,KAAKY,GAAgB,WAAXA,EAAEC,MAC1C,IAAK2B,EAEH,YADA/B,MAAM,0DAGR,MAAMgC,EAAcD,EAAY5G,OAAS,EAC5BkD,KAAKa,SACP,GAAM,KAAQ8C,EAAc,IACrC9F,EAAoB4F,IAAE,IAAUA,EAAIzF,MAAOyF,EAAGzF,MAAQ,EAAGC,MAAOwF,EAAGxF,MAAQ,KAC3EiB,EAAO,2GAEPA,EAAO,4DAwGb,OACER,IAAAkF,cAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,QAAS,GAAIC,WAAY,eACrDtF,IAAAkF,cAAA,OAAKE,MAAO,CAAEG,QAAS,OAAQC,cAAe,MAAOC,WAAY,aAAcC,eAAgB,eAE7F1F,IAAAkF,cAAA,OAAKE,MAAO,CAAEO,MAAO,IAAKC,UAAW,IAAKC,YAAa,GAAIC,WAAY,UAAWC,OAAQ,iBAAkBC,aAAc,EAAGX,QAAS,GAAIY,UAAW,OAAQC,SAAU,GAAIC,MAAO,OAAQC,UAAW,OAAQC,OAAQ,MACnNrG,IAAAkF,cAAA,OAAKE,MAAO,CAAEkB,WAAY,OAAQC,aAAc,IAAK,4BACrDvG,IAAAkF,cAAA,MAAIE,MAAO,CAAEC,QAAS,EAAGmB,OAAQ,EAAGC,UAAW,SAC5C7H,EAAK2D,IAAI,CAACmE,EAAK3D,IAAQ/C,IAAAkF,cAAA,MAAInH,IAAKgF,EAAKqC,MAAO,CAAEuB,QAAS5D,EAAI,GAAG,GAAI,IAAM2D,MAI7E1G,IAAAkF,cAAA,OAAKE,MAAO,CAAEG,QAAS,OAAQC,cAAe,MAAOG,MAAO,OAAQiB,SAAU,IAAMlB,eAAgB,gBAAiBD,WAAY,eAE/HzF,IAAAkF,cAAA,OAAKE,MAAO,CAAEyB,KAAM,EAAGC,SAAU,EAAGjB,YAAa,GAAII,UAAW,SAC9DjG,IAAAkF,cAAA,OAAKE,MAAO,CAAEG,QAAS,OAAQE,WAAY,SAAUc,aAAc,KACjEvG,IAAAkF,cAAA,MAAIE,MAAO,CAAES,YAAa,GAAIN,QAAS,OAAQE,WAAY,SAAUC,eAAgB,WAAY,8CAEjG1F,IAAAkF,cAAA,OAAKE,MAAO,CAAEG,QAAS,OAAQE,WAAY,WACxC,CAAC,eAAM,eAAM,gBAAMlD,IAAIwE,IACtB,MAEMC,EAAsB,iBAARD,EACdE,EAAqB,iBAARF,EAGbG,EAFkBF,GAAe5I,EAJV,IAKN6I,GAAc7I,EAJT,GAM5B,OACE4B,IAAAkF,cAAA,UACEnH,IAAKgJ,EACLI,QAASA,KACFD,GAAQxJ,EAAaqJ,IAE5BK,SAAUF,EACV9B,MAAO,CACLS,YAAa,GACbR,QAAS,WACTW,aAAcvI,IAAcsJ,EAAM,kBAAoB,MACtDM,gBAAiB5J,IAAcsJ,EAAM,UAAY,UACjDZ,MAAO1I,IAAcsJ,EAAM,OAASG,EAAS,OAAS,OACtDZ,WAAY7I,IAAcsJ,EAAM,OAAS,SACzChB,OAAQtI,IAAcsJ,EAAM,oBAAsB,iBAClDO,aAAc7J,IAAcsJ,EAAM,OAAS,iBAC3CQ,UAAW9J,IAAcsJ,EAAM,6BAA+B,OAC9DS,SAAU,WACVC,IAAKhK,IAAcsJ,EAAM,MAAQ,IACjCD,SAAU,IAEZY,MAAOR,EAAUF,EAAc,qDAAoCC,EAAa,qDAAmC,GAAM,IAExHF,EACAG,GAAUlH,IAAAkF,cAAA,QAAME,MAAO,CAAEc,SAAU,GAAIyB,WAAY,IAAK,6BAMnE3H,IAAAkF,cAAA,OAAKE,MAAO,CAAEmB,aAAc,KAC1BvG,IAAAkF,cAAA,QAAME,MAAO,CAAEc,SAAU,GAAIL,YAAa,KA9iBzBxF,EA8iB6CjC,GA9iBhCN,KA8iBuC,SAAEM,EAAM,IAAEmC,EAAYnC,GAAO,2BAAKE,EAAI,IAAEiC,EAAYnC,GAAO,UAChI4B,IAAAkF,cAAA,QAAME,MAAO,CAAEc,SAAU,KAAM,qBAAIhI,IA5JtB0J,MACvB,OAAOnK,GACL,IAAK,eACH,OACEuC,IAAAkF,cAAA,WACElF,IAAAkF,cAAA,UAAQiC,QAASxG,EAAiByG,SAAU5I,GAAcE,EAAW,GAAKmB,EAAMuF,MAAO,CAAEoC,SAAU,WAAY3B,YAAa,GAAIR,QAAS,WAAYwC,SAAU,SAAUlC,MAAO,MAC7K9F,EAAO,qBAASrB,GAAcE,EAAW,EAAI,wBAAW,gBACvDF,GAAcE,EAAW,KAAOmB,GAChCG,IAAAkF,cAAA,QAAME,MAAO,CACXoC,SAAU,WACVM,KAAM,EACNC,OAAQ,EACR1B,OAAQ,EACRV,SAA0C,KAA/BjH,EAAW,EAAIA,EAAW,MACrCoH,WAAY,UACZkC,WAAY,oBACZC,OAAQ,EACRjC,aAAc,EACdkC,cAAe,WAIrBlI,IAAAkF,cAAA,UAAQiC,QAASrE,EAAYsE,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,oFAC9FrF,IAAAkF,cAAA,UAAQiC,QAAS5D,EAAS6D,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,0CAG3FrF,IAAAkF,cAAA,OAAKE,MAAO,CAAE+C,UAAW,GAAI5B,aAAc,EAAGJ,MAAO3G,EAAQE,OAAO,GAAG,OAAO,UAAW4G,WAAY,SAAU,qBACzG9G,EAAQG,KAAK,2BAAKH,EAAQE,KAAK,WAI3C,IAAK,eAEH,OAAItB,EA3dkB,GA6dlB4B,IAAAkF,cAAA,WACElF,IAAAkF,cAAA,KAAGE,MAAO,CAACe,MAAM,8GAAmD/H,KACpE4B,IAAAkF,cAAA,UAAQkC,UAAQ,EAAChC,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,2DAKtErF,IAAAkF,cAAA,WACElF,IAAAkF,cAAA,UAAQiC,QAASjE,EAAYkE,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,oIAE9FrF,IAAAkF,cAAA,UAAQiC,QAASA,IAAI5C,EAAuB,QAAS6C,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,yCACtHrF,IAAAkF,cAAA,UAAQiC,QAASA,IAAI5C,EAAuB,aAAc6C,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,yCAC3HrF,IAAAkF,cAAA,UAAQiC,QAASA,IAAI5C,EAAuB,UAAW6C,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,qDAExHrF,IAAAkF,cAAA,UAAQiC,QAASA,IAAIvC,EAAkB,QAASwC,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,wCACjHrF,IAAAkF,cAAA,UAAQiC,QAASA,IAAIvC,EAAkB,UAAWwC,SAAUvH,EAAMuF,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,wCAEnHrF,IAAAkF,cAAA,OAAKE,MAAO,CAAE+C,UAAW,GAAI5B,aAAc,IACxCzH,EAAUuD,OAAS,EAClBrC,IAAAkF,cAAAlF,IAAAoI,SAAA,KACEpI,IAAAkF,cAAA,OAAKE,MAAO,CAAEkB,WAAY,OAAQC,aAAc,IAAK,8CACpDzH,EAAUyD,IAAIa,GACbpD,IAAAkF,cAAA,OAAKnH,IAAKqF,EAAEC,MACA,UAATD,EAAEC,sBAAsBD,EAAEE,QAChB,SAATF,EAAEC,wBAAuBD,EAAEhF,OAAO,IACzB,cAATgF,EAAEC,wBAA4BD,EAAEhF,OAAO,IAC9B,WAATgF,EAAEC,oCAA2BD,EAAEhF,OAAO,IAAIgF,EAAEC,QAKpDrD,IAAAkF,cAAA,WAAK,yFAITlF,IAAAkF,cAAA,OAAKE,MAAO,CAAC+C,UAAU,IACrBnI,IAAAkF,cAAA,YAAM,qBAAIlG,GACVgB,IAAAkF,cAAA,QAAME,MAAO,CAACuC,WAAW,KAAK,qBAAIzI,EAAiBE,IAAI,sBAAKF,EAAiBG,KAAK,sBAAKH,EAAiBI,MAAM,sBAAKJ,EAAiBK,SAI5I,IAAK,eAEH,MAAM8I,EAA0B,GAChC,OAAIjK,EAAQiK,EAERrI,IAAAkF,cAAA,WACElF,IAAAkF,cAAA,KAAGE,MAAO,CAACe,MAAM,gDAAmBkC,gEAAoCjK,KACxE4B,IAAAkF,cAAA,UAAQkC,UAAQ,EAAChC,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,2DAKtErF,IAAAkF,cAAA,WACElF,IAAAkF,cAAA,SAAG,wFACHlF,IAAAkF,cAAA,UAAQkC,UAAQ,EAAChC,MAAO,CAAES,YAAa,GAAIR,QAAS,aAAc,iEAGxE,QACE,OAAOrF,IAAAkF,cAAA,WAAK,oCAkEP0C,IAGH5H,IAAAkF,cAAA,OAAKE,MAAO,CAAE0B,SAAU,IAAKa,WAAY,EAAG5B,OAAQ,iBAAkBC,aAAc,EAAGX,QAAS,GAAIS,WAAY,OAAQH,MAAO,MAC7H3F,IAAAkF,cAAA,OAAKE,MAAO,CAAEkB,WAAY,OAAQC,aAAc,EAAGN,UAAW,WAAY,gBAC1EjG,IAAAkF,cAAA,SAAOE,MAAO,CAAEkD,eAAgB,WAAYpC,SAAU,GAAIP,MAAO,SAC/D3F,IAAAkF,cAAA,aACGtH,EAAU2K,OAAOtG,GAAKA,EAAEjE,MAAQ,GAAGuE,IAAI,CAACN,EAAGc,IAC1C/C,IAAAkF,cAAA,MAAInH,IAAKkE,EAAElE,KACTiC,IAAAkF,cAAA,MAAIE,MAAO,CAAEC,QAAS,UAAWY,UAAW,QAASE,MAAe,IAARpD,EAAY,OAAS,SAAWd,EAAEnE,MAC9FkC,IAAAkF,cAAA,MAAIE,MAAO,CAAEC,QAAS,UAAWY,UAAW,QAASK,WAAoB,IAARvD,EAAY,OAAS,WACnFzB,KAAKsC,MAAM3B,EAAEjE,OACbiE,EAAEhE,OAAS,GACV+B,IAAAkF,cAAA,QAAME,MAAO,CAAEe,MAAO,QAASD,SAAU,GAAIyB,WAAY,IAAK,KACzD1F,EAAEhE,OAAO,aAahC+B,IAAAkF,cAAA,OAAKE,MAAO,CAAE+C,UAAW,GAAIhC,MAAO,OAAQqC,WAAY,GAAIvC,UAAW,SAAUW,SAAU,IAAKJ,OAAQ,WACtGxG,IAAAkF,cAAA,SAAG,kIACHlF,IAAAkF,cAAA,SAAG,6LACHlF,IAAAkF,cAAA,SAAG,oIACHlF,IAAAkF,cAAA,SAAG,2ICpnBIuD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1J,IAAAkF,cAAClF,IAAM2J,WAAU,KACf3J,IAAAkF,cAAC1H,EAAG,QAORiL","file":"static/js/main.ba19ebe7.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./app.css\";\n\nfunction App() {\n  // 标签页状态\n  const [activeTab, setActiveTab] = useState('房子');\n  // 建筑标签页解锁等级\n  const buildingUnlockLevel = 10;\n  \n  // 资源与工人状态\n  const initialResources = [\n    { name: '铁矿石', key: 'iron', value: 0, perSec: 0 },\n    { name: '铜矿石', key: 'copper', value: 0, perSec: 0 },\n    { name: '木材', key: 'wood', value: 0, perSec: 0 },\n    { name: '石头', key: 'stone', value: 0, perSec: 0 },\n    { name: '黄金', key: 'gold', value: 0, perSec: 0 }\n  ];\n  const [resources, setResources] = useState(initialResources);\n  const [workers, setWorkers] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [exp, setExp] = useState(0);\n  const [collecting, setCollecting] = useState(false);\n  const [cooldown, setCooldown] = useState(0);\n  // 日志记录\n  const [logs, setLogs] = useState([\"游戏开始。\"]);\n  // 建筑系统\n  const [buildings, setBuildings] = useState([]); // {type: 'house', count: 1, level: 1, ...}\n  // 新增人口与材料状态\n  const [population, setPopulation] = useState(0);\n  const [specialMaterials, setSpecialMaterials] = useState({fur:0,meat:0,scale:0,tooth:0});\n  // 天气系统\n  const [weather, setWeather] = useState({ temp: 25, desc: '晴朗', tick: 0 });\n  const [dead, setDead] = useState(false);\n  const collectProgressTimerRef = React.useRef(null);\n  const collectActionTimeoutRef = React.useRef(null);\n  // 等级阶段与经验需求\n  const levelStages = [\n    { name: '初级', maxLevel: 3, exp: 100 },\n    { name: '中级', maxLevel: 6, exp: 200 },\n    { name: '高级', maxLevel: 99, exp: 500 }\n  ];\n  const getStage = (lv) => {\n    if (lv < 3) return levelStages[0];\n    if (lv < 6) return levelStages[1];\n    return levelStages[2];\n  };\n  const getStageName = (lv) => getStage(lv).name;\n  const getStageExp = (lv) => getStage(lv).exp;\n  // 冷却时间随等级提升递减，最低0.5秒\n  const getCooldownDuration = () => {\n    if (level <= 1) return 800; // 1级采集时间为0.8秒\n    if (level <= 3) return 1200 + (level - 1) * 200; // 2-3级逐步加长\n    if (level <= 6) return 1800 + (level - 3) * 300; // 4-6级再加长\n    return 2700 + (level - 6) * 100; // 7级及以上缓慢递增\n  };\n  \n  // 日志添加\n  const addLog = (msg) => setLogs(logs => [msg, ...logs.slice(0, 49)]);\n  // 手动采集资源（采集）\n  const collectResource = () => {\n    if (dead || collecting) return; // Prevent action if dead or already collecting\n\n    setCollecting(true);\n    setCooldown(1);\n    const cooldownDuration = getCooldownDuration();\n    const start = Date.now();\n\n    // Clear any existing timers from a previous, possibly interrupted, collection attempt\n    if (collectProgressTimerRef.current) {\n      clearInterval(collectProgressTimerRef.current);\n      collectProgressTimerRef.current = null;\n    }\n    if (collectActionTimeoutRef.current) {\n      clearTimeout(collectActionTimeoutRef.current);\n      collectActionTimeoutRef.current = null;\n    }\n\n    collectProgressTimerRef.current = setInterval(() => {\n      const elapsed = Date.now() - start;\n      const progress = Math.max(0, 1 - elapsed / cooldownDuration);\n      setCooldown(progress);\n      if (elapsed >= cooldownDuration) {\n        clearInterval(collectProgressTimerRef.current);\n        collectProgressTimerRef.current = null; // Clear ref\n        setCooldown(0); // Ensure cooldown visual is reset\n      }\n    }, 16);\n\n    collectActionTimeoutRef.current = setTimeout(() => {\n      // NOTE: The core logic for stopping this timeout if `dead` becomes true\n      // is handled by the new useEffect that cleans up `collectActionTimeoutRef.current`.\n\n      // 采集逻辑：根据等级和概率采集不同资源\n      // 采集逻辑：根据等级和概率采集不同资源\n      let selectedKey = 'wood'; // 默认采集木材\n      if (level > 1) {\n        // 定义资源等级和掉落概率\n        const resourceTiers = [\n          // 初级资源 (等级1时不应到这里，但保留结构以防万一)\n          [\n            { key: 'wood', weight: 100 } // 等级1只掉落木材\n          ],\n          // 中级资源 (从等级10开始)\n          [\n            { key: 'wood', weight: 40 }, // 木材概率高\n            { key: 'stone', weight: 25 }, // 石头概率中\n            { key: 'iron', weight: 20 }, // 铁矿石概率较低\n            { key: 'copper', weight: 10 }, // 铜矿石概率更低\n            { key: 'gold', weight: 5 } // 黄金极低概率\n          ],\n          // 高级资源 (从等级20开始)\n          [\n            { key: 'gold', weight: 20 }, // 黄金概率提升\n            { key: 'iron', weight: 30 },\n            { key: 'copper', weight: 25 },\n            { key: 'stone', weight: 15 },\n            { key: 'wood', weight: 10 } // 木材概率降低\n          ]\n        ];\n        // 根据等级解锁可采集资源\n        let availableTierResources = [];\n        if (level >= 20) { // 高级\n          availableTierResources = resourceTiers[2];\n        } else if (level >= 10) { // 中级\n          availableTierResources = resourceTiers[1];\n        } else { // 初级 (理论上 level > 1 且 < 10)\n          availableTierResources = resourceTiers[0];\n        }\n\n        // 概率加权采集\n        const totalWeight = availableTierResources.reduce((sum, r) => sum + r.weight, 0);\n        let rand = Math.random() * totalWeight;\n        for (let i = 0; i < availableTierResources.length; i++) {\n          rand -= availableTierResources[i].weight;\n          if (rand <= 0) {\n            selectedKey = availableTierResources[i].key;\n            break;\n          }\n        }\n      } else {\n        // 等级为1时，确保只采集木材\n        selectedKey = 'wood';\n      }\n      setResources(rs => rs.map(r => r.key === selectedKey ? { ...r, value: r.value + 1 } : r));\n      addLog(`采集获得了${resources.find(r=>r.key===selectedKey)?.name||selectedKey}`);\n      // 增加经验并处理升级\n      setExp(prevExp => {\n        let nextExp = prevExp + 10;\n        let nextLevel = level;\n        let stageExp = getStageExp(nextLevel);\n        let changed = false;\n        while (nextExp >= stageExp) {\n          nextExp -= stageExp;\n          nextLevel += 1;\n          stageExp = getStageExp(nextLevel);\n          changed = true;\n        }\n        if (changed) setLevel(nextLevel);\n        return nextExp;\n      });\n      setCollecting(false);\n      collectActionTimeoutRef.current = null; // Mark as completed/cleared\n    }, cooldownDuration);\n  };\n  \n  // 招募工人（提升等级）\n  const hireWorker = () => {\n    if (dead) return;\n    if (resources[2].value >= 10) {\n      setResources(rs => rs.map((r, idx) => {\n        if(idx === 2) return { ...r, value: r.value - 10 };\n        if(idx === 0) return { ...r, perSec: r.perSec + 0.1 }; // 铁矿石\n        if(idx === 1) return { ...r, perSec: r.perSec + 0.1 }; // 铜矿石\n        if(idx === 3) return { ...r, perSec: r.perSec + 0.1 }; // 石头\n        if(idx === 4) return { ...r, perSec: r.perSec + 0.05 }; // 黄金\n        return r;\n      }));\n      setWorkers(w => w + 1);\n      setLevel(lv => lv + 1);\n      addLog('招募一名工人。');\n    } else {\n      alert('招募工人需要10木材！');\n    }\n  };\n  // 建造房子\n  const buildHouse = () => {\n    if (dead) return;\n    if (resources[2].value >= 20 && resources[3].value >= 10) {\n      setResources(rs => rs.map((r, idx) => {\n        if(r.key==='wood') return { ...r, value: r.value - 20 };\n        if(r.key==='stone') return { ...r, value: r.value - 10 };\n        return r;\n      }));\n      setBuildings(bs => {\n        const exist = bs.find(b=>b.type==='house');\n        if(exist) return bs.map(b=>b.type==='house'?{...b,count:b.count+1}:b);\n        return [...bs, {type:'house', count:1}];\n      });\n      addLog('建造了一间房子。');\n    } else {\n      alert('建造房子需要20木材和10石头！');\n    }\n  };\n  // 添加木材按钮逻辑\n  const addWood = () => {\n    if (dead) return;\n    const wood = resources.find(r => r.key === 'wood');\n    if (wood && wood.value >= 1) {\n      setResources(rs => rs.map(r => r.key === 'wood' ? { ...r, value: r.value - 1 } : r));\n      setWeather(w => ({ ...w, temp: w.temp + 3 }));\n      addLog('消耗1木材，提升了室内温度3℃！');\n    } else {\n      alert('木材不足，无法提升温度！');\n    }\n  };\n  // 天气变化与生存检测\n  useEffect(() => {\n    if(dead) return;\n    const interval = setInterval(() => {\n      setWeather(w => {\n        let tick = w.tick + 1;\n        let temp = w.temp;\n        let desc = w.desc;\n        // 每10 tick变一次天气\n        if(tick % 10 === 0) {\n          const r = Math.random();\n          if(r < 0.3) { temp = Math.max(-20, temp - Math.floor(Math.random()*8+3)); desc = '暴风雪'; }\n          else if(r < 0.7) { temp = Math.max(-10, temp - Math.floor(Math.random()*4+1)); desc = '寒冷'; }\n          else { temp = Math.min(25, temp + Math.floor(Math.random()*6)); desc = '晴朗'; }\n          addLog(`天气变化：${desc}，温度${temp}℃`);\n        }\n        // 检查是否冻死\n        let houseCount = buildings.find(b=>b.type==='house')?.count||0;\n        if(temp <= -10 && houseCount === 0) {\n          setDead(true);\n          addLog('你被冻死了！游戏结束。');\n        }\n        return { temp, desc, tick };\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [dead, buildings]);\n  \n  // 自动采集逻辑\n  useEffect(() => {\n    if (dead) { // 如果角色已死亡，则不启动新的计时器，旧的计时器会被清理函数清除\n      return;\n    }\n    if (workers > 0) {\n      const interval = setInterval(() => {\n        setResources(currentResources => {\n          // 自动采集采用与手动采集一致的加权概率逻辑\n          let selectedKey = 'wood';\n          if (level > 1) {\n            // 自动采集的资源等级定义：\n            // - 初级 (等级 2-9): resourceTiers[0]\n            // - 中级 (等级 10-19): resourceTiers[1]\n            // - 高级 (等级 20+): resourceTiers[2]\n            const resourceTiers = [\n              [\n                { key: 'wood', weight: 80 }\n              ],\n              [\n                { key: 'wood', weight: 80 },\n                { key: 'stone', weight: 25 },\n                { key: 'iron', weight: 20 },\n                { key: 'copper', weight: 10 },\n                { key: 'gold', weight: 5 }\n              ],\n              [\n                { key: 'gold', weight: 20 },\n                { key: 'iron', weight: 30 },\n                { key: 'copper', weight: 25 },\n                { key: 'stone', weight: 15 },\n                { key: 'wood', weight: 80 }\n              ]\n            ];\n            let availableTierResources = [];\n            if (level >= 20) {\n              availableTierResources = resourceTiers[2];\n            } else if (level >= 10) {\n              availableTierResources = resourceTiers[1];\n            } else {\n              availableTierResources = resourceTiers[0];\n            }\n            const totalWeight = availableTierResources.reduce((sum, r) => sum + r.weight, 0);\n            let rand = Math.random() * totalWeight;\n            for (let i = 0; i < availableTierResources.length; i++) {\n              rand -= availableTierResources[i].weight;\n              if (rand <= 0) {\n                selectedKey = availableTierResources[i].key;\n                break;\n              }\n            }\n          } else {\n            selectedKey = 'wood';\n          }\n          // 增加采集到的资源\n          const newResources = currentResources.map(r => r.key === selectedKey ? { ...r, value: +(r.value + (r.perSec > 0 ? r.perSec : 1)).toFixed(2) } : r);\n          // 只有资源实际增加时才增加经验\n          if (newResources.some((r, idx) => newResources[idx].value > currentResources[idx].value)) {\n            const collectedResource = newResources.find(r => r.key === selectedKey);\n            if (collectedResource) {\n              const amountCollected = +( (collectedResource.perSec > 0 ? collectedResource.perSec : 1) * workers ).toFixed(2);\n              addLog(`工人自动采集获得了 ${amountCollected} ${collectedResource.name || selectedKey}。`);\n            }\n            setExp(prevExp => {\n              let currentLevelForExpCalc = level; \n              let nextExp = prevExp + 5 * workers;\n              let nextLevelCandidate = currentLevelForExpCalc;\n              let stageExp = getStageExp(nextLevelCandidate);\n              let levelDidChange = false;\n              while (nextExp >= stageExp) {\n                nextExp -= stageExp;\n                nextLevelCandidate += 1;\n                stageExp = getStageExp(nextLevelCandidate);\n                levelDidChange = true;\n              }\n              if (levelDidChange) {\n                setLevel(nextLevelCandidate); \n              }\n              return nextExp; \n            });\n          }\n          return newResources; \n        });\n      }, 3000); // 自动采集间隔调整为3000ms\n      return () => clearInterval(interval);\n    }\n  }, [workers, level, dead, addLog, resources]); // 将 addLog 和 resources 添加到依赖项数组\n\n  // Effect to clear manual collection timers if player dies\n  useEffect(() => {\n    if (dead) {\n      if (collectProgressTimerRef.current) {\n        clearInterval(collectProgressTimerRef.current);\n        collectProgressTimerRef.current = null;\n      }\n      if (collectActionTimeoutRef.current) {\n        clearTimeout(collectActionTimeoutRef.current);\n        collectActionTimeoutRef.current = null;\n      }\n      // Reset UI states related to manual collection if death interrupts it\n      setCollecting(false);\n      setCooldown(0);\n    }\n    // Cleanup refs on component unmount (optional, but good practice)\n    return () => {\n      if (collectProgressTimerRef.current) {\n        clearInterval(collectProgressTimerRef.current);\n      }\n      if (collectActionTimeoutRef.current) {\n        clearTimeout(collectActionTimeoutRef.current);\n      }\n    };\n  }, [dead]); // Run this effect when 'dead' state changes\n\n  // =================== 建筑相关功能 ===================\n  const buildOrUpgradeBuilding = (type) => {\n    if (dead) return;\n    const woodResource = resources.find(r => r.key === 'wood');\n    const stoneResource = resources.find(r => r.key === 'stone');\n    const ironResource = resources.find(r => r.key === 'iron');\n\n    if (type === 'trap') {\n      if (woodResource && woodResource.value >= 10 && stoneResource && stoneResource.value >= 5) {\n        setResources(rs => rs.map(r => {\n          if (r.key === 'wood') return { ...r, value: r.value - 10 };\n          if (r.key === 'stone') return { ...r, value: r.value - 5 };\n          return r;\n        }));\n        setBuildings(bs => {\n          const exist = bs.find(b => b.type === 'trap');\n          if (exist) return bs.map(b => b.type === 'trap' ? { ...b, level: (b.level || 1) + 1 } : b);\n          return [...bs, { type: 'trap', level: 1 }];\n        });\n        addLog('建造/升级了陷阱。');\n      } else {\n        alert('建造/升级陷阱需要10木材和5石头！');\n      }\n    } else if (type === 'expansion') {\n      if (woodResource && woodResource.value >= 30 && stoneResource && stoneResource.value >= 20) {\n        setResources(rs => rs.map(r => {\n          if (r.key === 'wood') return { ...r, value: r.value - 30 };\n          if (r.key === 'stone') return { ...r, value: r.value - 20 };\n          return r;\n        }));\n        setBuildings(bs => {\n          const exist = bs.find(b => b.type === 'expansion');\n          if (exist) return bs.map(b => b.type === 'expansion' ? { ...b, level: (b.level || 1) + 1 } : b);\n          return [...bs, { type: 'expansion', level: 1 }];\n        });\n        setPopulation(p => p + 2);\n        addLog('扩建成功，人口上限提升。');\n      } else {\n        alert('扩建需要30木材和20石头！');\n      }\n    } else if (type === 'hunter') {\n      if (woodResource && woodResource.value >= 20 && ironResource && ironResource.value >= 10) {\n        setResources(rs => rs.map(r => {\n          if (r.key === 'wood') return { ...r, value: r.value - 20 };\n          if (r.key === 'iron') return { ...r, value: r.value - 10 };\n          return r;\n        }));\n        setBuildings(bs => {\n          const exist = bs.find(b => b.type === 'hunter');\n          if (exist) return bs.map(b => b.type === 'hunter' ? { ...b, level: (b.level || 1) + 1 } : b);\n          return [...bs, { type: 'hunter', level: 1 }];\n        });\n        addLog('建造/升级了猎人小屋。');\n      } else {\n        alert('建造/升级猎人小屋需要20木材和10铁矿石！');\n      }\n    }\n  };\n\n  const triggerTrapOrHunt = (type) => {\n    if (type === 'trap') {\n      const trapBuilding = buildings.find(b => b.type === 'trap');\n      if (!trapBuilding) {\n        alert('请先建造陷阱！');\n        return;\n      }\n      const trapLevel = trapBuilding.level || 1;\n      const rand = Math.random();\n      if (rand < 0.5 + 0.1 * (trapLevel - 1)) {\n        setSpecialMaterials(sm => ({ ...sm, fur: sm.fur + 1, meat: sm.meat + 1 }));\n        addLog('陷阱捕获到一只小动物，获得毛皮和鲜肉！');\n      } else {\n        addLog('陷阱未能捕获到猎物。');\n      }\n    } else if (type === 'hunter') {\n      const hunterLodge = buildings.find(b => b.type === 'hunter');\n      if (!hunterLodge) {\n        alert('请先建造猎人小屋！');\n        return;\n      }\n      const hunterLevel = hunterLodge.level || 1;\n      const rand = Math.random();\n      if (rand < 0.4 + 0.12 * (hunterLevel - 1)) {\n        setSpecialMaterials(sm => ({ ...sm, scale: sm.scale + 1, tooth: sm.tooth + 1 }));\n        addLog('猎人小屋狩猎成功，获得鳞片和兽齿！');\n      } else {\n        addLog('猎人小屋狩猎失败。');\n      }\n    }\n  };\n  \n  // 渲染标签页内容\n  const renderTabContent = () => {\n    switch(activeTab) {\n      case '房子':\n        return (\n          <div>\n            <button onClick={collectResource} disabled={collecting || cooldown > 0 || dead} style={{ position: 'relative', marginRight: 12, padding: '8px 16px', overflow: 'hidden', width: 120 }}>\n              {dead ? '已死亡' : (collecting || cooldown > 0 ? '采集中...' : '采集')}\n              {(collecting || cooldown > 0) && !dead && (\n                <span style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  height: 4,\n                  width: `${(cooldown > 0 ? cooldown : 1) * 100}%`,\n                  background: '#2196f3',\n                  transition: 'width 0.1s linear',\n                  zIndex: 1,\n                  borderRadius: 2,\n                  pointerEvents: 'none',\n                }} />\n              )}\n            </button>\n            <button onClick={hireWorker} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>招募工人（10木材，提升等级）</button>\n            <button onClick={addWood} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>添加木材（-1）</button>\n            \n            {/* 天气显示 */}\n            <div style={{ marginTop: 16, marginBottom: 8, color: weather.temp<=-10?'#c00':'#2196f3', fontWeight: 'bold' }}>\n              天气：{weather.desc}，温度：{weather.temp}℃\n            </div>\n          </div>\n        );\n      case '建筑':\n        // 建筑功能达到 buildingUnlockLevel 级开放\n        if (level < buildingUnlockLevel) {\n          return (\n            <div>\n              <p style={{color:'#c00'}}>{`建筑功能将在${buildingUnlockLevel}级后解锁，当前等级：${level}`}</p>\n              <button disabled style={{ marginRight: 12, padding: '8px 16px' }}>建造房子（未解锁）</button>\n            </div>\n          );\n        }\n        return (\n          <div>\n            <button onClick={buildHouse} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>等级10解锁建造房子，房子可防止极寒天气冻死。</button>\n            {/* 新增功能性建筑按钮 */}\n            <button onClick={()=>buildOrUpgradeBuilding('trap')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>建造/升级陷阱</button>\n            <button onClick={()=>buildOrUpgradeBuilding('expansion')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>建造/升级扩建</button>\n            <button onClick={()=>buildOrUpgradeBuilding('hunter')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>建造/升级猎人小屋</button>\n            {/* 功能性建筑操作 */}\n            <button onClick={()=>triggerTrapOrHunt('trap')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>触发陷阱捕获</button>\n            <button onClick={()=>triggerTrapOrHunt('hunter')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>猎人小屋狩猎</button>\n            {/* 展示建筑 */}\n            <div style={{ marginTop: 16, marginBottom: 8 }}>\n              {buildings.length > 0 ? (\n                <>\n                  <div style={{ fontWeight: 'bold', marginBottom: 4 }}>已建造的建筑：</div>\n                  {buildings.map(b => (\n                    <div key={b.type}>\n                      {b.type==='house'?`房子 x${b.count}`:\n                        b.type==='trap'?`陷阱 Lv.${b.level||1}`:\n                        b.type==='expansion'?`扩建 Lv.${b.level||1}`:\n                        b.type==='hunter'?`猎人小屋 Lv.${b.level||1}`:b.type}\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div>暂无建筑，请先建造一些建筑。</div>\n              )}\n            </div>\n            {/* 展示特殊材料与人口 */}\n            <div style={{marginTop:8}}>\n              <span>人口：{population}</span>\n              <span style={{marginLeft:12}}>毛皮：{specialMaterials.fur} 鲜肉：{specialMaterials.meat} 鳞片：{specialMaterials.scale} 兽齿：{specialMaterials.tooth}</span>\n            </div>\n          </div>\n        );\n      case '探险':\n        // 探险功能达到 adventureUnlockLevel 级开放\n        const adventureUnlockLevelTab = 30; // 定义探险解锁等级\n        if (level < adventureUnlockLevelTab) {\n          return (\n            <div>\n              <p style={{color:'#c00'}}>{`探险功能将在${adventureUnlockLevelTab}级后解锁，当前等级：${level}`}</p>\n              <button disabled style={{ marginRight: 12, padding: '8px 16px' }}>开始探险（未解锁）</button>\n            </div>\n          );\n        }\n        return (\n          <div>\n            <p>探险功能尚未开放，敬请期待！</p>\n            <button disabled style={{ marginRight: 12, padding: '8px 16px' }}>开始探险（即将推出）</button>\n          </div>\n        );\n      default:\n        return <div>未知标签页</div>;\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ padding: 24, fontFamily: 'sans-serif' }}>\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'flex-start' }}>\n        {/* 日志区块 */}\n        <div style={{ width: 220, minHeight: 400, marginRight: 32, background: '#f7f7f7', border: '1px solid #ccc', borderRadius: 6, padding: 12, textAlign: 'left', fontSize: 14, color: '#333', overflowY: 'auto', height: 480 }}>\n          <div style={{ fontWeight: 'bold', marginBottom: 8 }}>日志记录</div>\n          <ul style={{ padding: 0, margin: 0, listStyle: 'none' }}>\n            {logs.map((log, idx) => <li key={idx} style={{ opacity: idx>20?0.5:1 }}>{log}</li>)}\n          </ul>\n        </div>\n        {/* 主体内容和库存左右排版容器 */}\n        <div style={{ display: 'flex', flexDirection: 'row', width: '100%', maxWidth: 1000, justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          {/* 主体内容区块 */}\n          <div style={{ flex: 1, minWidth: 0, marginRight: 32, textAlign: 'left' }}>\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 16 }}>\n              <h1 style={{ marginRight: 20, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>打造末日安全屋</h1>\n              {/* 标签页导航 */}\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                {['房子', '建筑', '探险'].map(tab => {\n                  const adventureUnlockLevel = 30;\n                  const buildingUnlockLevel = 10;\n                  const isAdventure = tab === '探险';\n                  const isBuilding = tab === '建筑';\n                  const adventureLocked = isAdventure && level < adventureUnlockLevel;\n                  const buildingLocked = isBuilding && level < buildingUnlockLevel;\n                  const locked = adventureLocked || buildingLocked;\n                  return (\n                    <button\n                      key={tab}\n                      onClick={() => {\n                        if (!locked) setActiveTab(tab);\n                      }}\n                      disabled={locked}\n                      style={{\n                        marginRight: 12,\n                        padding: '8px 16px',\n                        borderRadius: activeTab === tab ? '4px 4px 4px 4px' : '4px',\n                        backgroundColor: activeTab === tab ? '#2196f3' : '#f5f5f5',\n                        color: activeTab === tab ? '#fff' : locked ? '#aaa' : '#333',\n                        fontWeight: activeTab === tab ? 'bold' : 'normal',\n                        border: activeTab === tab ? '2px solid #2196f3' : '1px solid #ccc',\n                        borderBottom: activeTab === tab ? 'none' : '1px solid #ccc',\n                        boxShadow: activeTab === tab ? '0 -2px 5px rgba(0,0,0,0.1)' : 'none',\n                        position: 'relative',\n                        top: activeTab === tab ? '1px' : '0',\n                        minWidth: 80\n                      }}\n                      title={locked ? (isAdventure ? `达到${adventureUnlockLevel}级后解锁探险` : isBuilding ? `达到${buildingUnlockLevel}级后解锁建筑` : '') : ''}\n                    >\n                      {tab}\n                      {locked && <span style={{ fontSize: 12, marginLeft: 2 }}>(未解锁)</span>}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n            <div style={{ marginBottom: 16 }}>\n              <span style={{ fontSize: 18, marginRight: 16 }}>{getStageName(level)}：{level}/{getStageExp(level)}（经验：{exp}/{getStageExp(level)}）</span>\n              <span style={{ fontSize: 18 }}>工人：{workers}</span>\n            </div>\n            \n            {/* 标签页内容 */}\n            {renderTabContent()}\n          </div>\n          {/* 库存内容区块 */}\n          <div style={{ minWidth: 220, marginLeft: 0, border: '1px solid #aaa', borderRadius: 6, padding: 12, background: '#fff', width: 220 }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4, textAlign: 'center' }}>库存</div>\n            <table style={{ borderCollapse: 'collapse', fontSize: 16, width: '100%' }}>\n              <tbody>\n                {resources.filter(r => r.value > 0).map((r, idx) => (\n                  <tr key={r.key}>\n                    <td style={{ padding: '2px 8px', textAlign: 'right', color: idx === 0 ? '#333' : '#666' }}>{r.name}</td>\n                    <td style={{ padding: '2px 8px', textAlign: 'right', fontWeight: idx === 0 ? 'bold' : 'normal' }}>\n                      {Math.floor(r.value)}\n                      {r.perSec > 0 && (\n                        <span style={{ color: 'green', fontSize: 14, marginLeft: 2 }}>\n                          (+{r.perSec})\n                        </span>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      \n      {/* 游戏说明区块 - 移动到页面底部 */}\n      <div style={{ marginTop: 40, color: '#888', paddingTop: 20, textAlign: 'center', maxWidth: 800, margin: '0 auto' }}>\n        <p>每个工人每秒自动采集所有有增长速率的资源。</p>\n        <p>招募工人消耗10木材并提升等级，等级越高采集冷却越短（最低0.5秒）。</p>\n        <p>等级10解锁建造房子，房子可防止极寒天气冻死。</p>\n        <p>天气系统：温度过低且无房子时会导致角色死亡。</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportwebvitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}