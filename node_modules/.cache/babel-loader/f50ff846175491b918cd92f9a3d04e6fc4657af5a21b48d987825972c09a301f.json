{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./app.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){// 标签页状态\nconst[activeTab,setActiveTab]=useState('房子');// 建筑标签页解锁等级\nconst buildingUnlockLevel=10;// 资源与工人状态\nconst initialResources=[{name:'铁矿石',key:'iron',value:0,perSec:0},{name:'铜矿石',key:'copper',value:0,perSec:0},{name:'木材',key:'wood',value:0,perSec:0},{name:'石头',key:'stone',value:0,perSec:0},{name:'黄金',key:'gold',value:0,perSec:0}];const[resources,setResources]=useState(initialResources);const[workers,setWorkers]=useState(0);const[level,setLevel]=useState(1);const[exp,setExp]=useState(0);const[collecting,setCollecting]=useState(false);const[cooldown,setCooldown]=useState(0);// 日志记录\nconst[logs,setLogs]=useState([\"游戏开始。\"]);// 建筑系统\nconst[buildings,setBuildings]=useState([]);// {type: 'house', count: 1, level: 1, ...}\n// 新增人口与材料状态\nconst[population,setPopulation]=useState(0);const[specialMaterials,setSpecialMaterials]=useState({fur:0,meat:0,scale:0,tooth:0});// 天气系统\nconst[weather,setWeather]=useState({temp:25,desc:'晴朗',tick:0});const[dead,setDead]=useState(false);const collectProgressTimerRef=React.useRef(null);const collectActionTimeoutRef=React.useRef(null);// 等级阶段与经验需求\nconst levelStages=[{name:'初级',maxLevel:3,exp:100},{name:'中级',maxLevel:6,exp:200},{name:'高级',maxLevel:99,exp:500}];const getStage=lv=>{if(lv<3)return levelStages[0];if(lv<6)return levelStages[1];return levelStages[2];};const getStageName=lv=>getStage(lv).name;const getStageExp=lv=>getStage(lv).exp;// 冷却时间随等级提升递减，最低0.5秒\nconst getCooldownDuration=()=>{if(level<=1)return 800;// 1级采集时间为0.8秒\nif(level<=3)return 1200+(level-1)*200;// 2-3级逐步加长\nif(level<=6)return 1800+(level-3)*300;// 4-6级再加长\nreturn 2700+(level-6)*100;// 7级及以上缓慢递增\n};// 日志添加\nconst addLog=msg=>setLogs(logs=>[msg,...logs.slice(0,49)]);// 手动采集资源（采集）\nconst collectResource=()=>{if(dead||collecting)return;// Prevent action if dead or already collecting\nsetCollecting(true);setCooldown(1);const cooldownDuration=getCooldownDuration();const start=Date.now();// Clear any existing timers from a previous, possibly interrupted, collection attempt\nif(collectProgressTimerRef.current){clearInterval(collectProgressTimerRef.current);collectProgressTimerRef.current=null;}if(collectActionTimeoutRef.current){clearTimeout(collectActionTimeoutRef.current);collectActionTimeoutRef.current=null;}collectProgressTimerRef.current=setInterval(()=>{const elapsed=Date.now()-start;const progress=Math.max(0,1-elapsed/cooldownDuration);setCooldown(progress);if(elapsed>=cooldownDuration){clearInterval(collectProgressTimerRef.current);collectProgressTimerRef.current=null;// Clear ref\nsetCooldown(0);// Ensure cooldown visual is reset\n}},16);collectActionTimeoutRef.current=setTimeout(()=>{var _resources$find;// NOTE: The core logic for stopping this timeout if `dead` becomes true\n// is handled by the new useEffect that cleans up `collectActionTimeoutRef.current`.\n// 采集逻辑：根据等级和概率采集不同资源\n// 采集逻辑：根据等级和概率采集不同资源\nlet selectedKey='wood';// 默认采集木材\nif(level>1){// 定义资源等级和掉落概率\nconst resourceTiers=[// 初级资源 (等级1时不应到这里，但保留结构以防万一)\n[{key:'wood',weight:100}// 等级1只掉落木材\n],// 中级资源 (从等级10开始)\n[{key:'wood',weight:40},// 木材概率高\n{key:'stone',weight:25},// 石头概率中\n{key:'iron',weight:20},// 铁矿石概率较低\n{key:'copper',weight:10},// 铜矿石概率更低\n{key:'gold',weight:5}// 黄金极低概率\n],// 高级资源 (从等级20开始)\n[{key:'gold',weight:20},// 黄金概率提升\n{key:'iron',weight:30},{key:'copper',weight:25},{key:'stone',weight:15},{key:'wood',weight:10}// 木材概率降低\n]];// 根据等级解锁可采集资源\nlet availableTierResources=[];if(level>=20){// 高级\navailableTierResources=resourceTiers[2];}else if(level>=10){// 中级\navailableTierResources=resourceTiers[1];}else{// 初级 (理论上 level > 1 且 < 10)\navailableTierResources=resourceTiers[0];}// 概率加权采集\nconst totalWeight=availableTierResources.reduce((sum,r)=>sum+r.weight,0);let rand=Math.random()*totalWeight;for(let i=0;i<availableTierResources.length;i++){rand-=availableTierResources[i].weight;if(rand<=0){selectedKey=availableTierResources[i].key;break;}}}else{// 等级为1时，确保只采集木材\nselectedKey='wood';}setResources(rs=>rs.map(r=>r.key===selectedKey?{...r,value:r.value+1}:r));addLog(`采集获得了${((_resources$find=resources.find(r=>r.key===selectedKey))===null||_resources$find===void 0?void 0:_resources$find.name)||selectedKey}`);// 增加经验并处理升级\nsetExp(prevExp=>{let nextExp=prevExp+10;let nextLevel=level;let stageExp=getStageExp(nextLevel);let changed=false;while(nextExp>=stageExp){nextExp-=stageExp;nextLevel+=1;stageExp=getStageExp(nextLevel);changed=true;}if(changed)setLevel(nextLevel);return nextExp;});setCollecting(false);collectActionTimeoutRef.current=null;// Mark as completed/cleared\n},cooldownDuration);};// 招募工人（提升等级）\nconst hireWorker=()=>{if(dead)return;if(resources[2].value>=10){setResources(rs=>rs.map((r,idx)=>{if(idx===2)return{...r,value:r.value-10};if(idx===0)return{...r,perSec:r.perSec+0.1};// 铁矿石\nif(idx===1)return{...r,perSec:r.perSec+0.1};// 铜矿石\nif(idx===3)return{...r,perSec:r.perSec+0.1};// 石头\nif(idx===4)return{...r,perSec:r.perSec+0.05};// 黄金\nreturn r;}));setWorkers(w=>w+1);setLevel(lv=>lv+1);addLog('招募一名工人。');}else{alert('招募工人需要10木材！');}};// 建造房子\nconst buildHouse=()=>{if(dead)return;if(resources[2].value>=20&&resources[3].value>=10){setResources(rs=>rs.map((r,idx)=>{if(r.key==='wood')return{...r,value:r.value-20};if(r.key==='stone')return{...r,value:r.value-10};return r;}));setBuildings(bs=>{const exist=bs.find(b=>b.type==='house');if(exist)return bs.map(b=>b.type==='house'?{...b,count:b.count+1}:b);return[...bs,{type:'house',count:1}];});addLog('建造了一间房子。');}else{alert('建造房子需要20木材和10石头！');}};// 添加木材按钮逻辑\nconst addWood=()=>{if(dead)return;const wood=resources.find(r=>r.key==='wood');if(wood&&wood.value>=1){setResources(rs=>rs.map(r=>r.key==='wood'?{...r,value:r.value-1}:r));setWeather(w=>({...w,temp:w.temp+3}));addLog('消耗1木材，提升了室内温度3℃！');}else{alert('木材不足，无法提升温度！');}};// 天气变化与生存检测\nuseEffect(()=>{if(dead)return;const interval=setInterval(()=>{setWeather(w=>{var _buildings$find;let tick=w.tick+1;let temp=w.temp;let desc=w.desc;// 每10 tick变一次天气\nif(tick%10===0){const r=Math.random();if(r<0.3){temp=Math.max(-20,temp-Math.floor(Math.random()*8+3));desc='暴风雪';}else if(r<0.7){temp=Math.max(-10,temp-Math.floor(Math.random()*4+1));desc='寒冷';}else{temp=Math.min(25,temp+Math.floor(Math.random()*6));desc='晴朗';}addLog(`天气变化：${desc}，温度${temp}℃`);}// 检查是否冻死\nlet houseCount=((_buildings$find=buildings.find(b=>b.type==='house'))===null||_buildings$find===void 0?void 0:_buildings$find.count)||0;if(temp<=-10&&houseCount===0){setDead(true);addLog('你被冻死了！游戏结束。');}return{temp,desc,tick};});},1000);return()=>clearInterval(interval);},[dead,buildings]);// 自动采集逻辑\nuseEffect(()=>{if(dead){// 如果角色已死亡，则不启动新的计时器，旧的计时器会被清理函数清除\nreturn;}if(workers>0){const interval=setInterval(()=>{setResources(currentResources=>{// 自动采集采用与手动采集一致的加权概率逻辑\nlet selectedKey='wood';if(level>1){// 自动采集的资源等级定义：\n// - 初级 (等级 2-9): resourceTiers[0]\n// - 中级 (等级 10-19): resourceTiers[1]\n// - 高级 (等级 20+): resourceTiers[2]\nconst resourceTiers=[[{key:'wood',weight:80}],[{key:'wood',weight:80},{key:'stone',weight:25},{key:'iron',weight:20},{key:'copper',weight:10},{key:'gold',weight:5}],[{key:'gold',weight:20},{key:'iron',weight:30},{key:'copper',weight:25},{key:'stone',weight:15},{key:'wood',weight:80}]];let availableTierResources=[];if(level>=20){availableTierResources=resourceTiers[2];}else if(level>=10){availableTierResources=resourceTiers[1];}else{availableTierResources=resourceTiers[0];}const totalWeight=availableTierResources.reduce((sum,r)=>sum+r.weight,0);let rand=Math.random()*totalWeight;for(let i=0;i<availableTierResources.length;i++){rand-=availableTierResources[i].weight;if(rand<=0){selectedKey=availableTierResources[i].key;break;}}}else{selectedKey='wood';}// 增加采集到的资源\nconst newResources=currentResources.map(r=>r.key===selectedKey?{...r,value:+(r.value+(r.perSec>0?r.perSec:1)).toFixed(2)}:r);// 只有资源实际增加时才增加经验\nif(newResources.some((r,idx)=>newResources[idx].value>currentResources[idx].value)){const collectedResource=newResources.find(r=>r.key===selectedKey);if(collectedResource){const amountCollected=+((collectedResource.perSec>0?collectedResource.perSec:1)*workers).toFixed(2);addLog(`工人自动采集获得了 ${amountCollected} ${collectedResource.name||selectedKey}。`);}setExp(prevExp=>{let currentLevelForExpCalc=level;let nextExp=prevExp+5*workers;let nextLevelCandidate=currentLevelForExpCalc;let stageExp=getStageExp(nextLevelCandidate);let levelDidChange=false;while(nextExp>=stageExp){nextExp-=stageExp;nextLevelCandidate+=1;stageExp=getStageExp(nextLevelCandidate);levelDidChange=true;}if(levelDidChange){setLevel(nextLevelCandidate);}return nextExp;});}return newResources;});},3000);// 自动采集间隔调整为3000ms\nreturn()=>clearInterval(interval);}},[workers,level,dead,addLog,resources]);// 将 addLog 和 resources 添加到依赖项数组\n// Effect to clear manual collection timers if player dies\nuseEffect(()=>{if(dead){if(collectProgressTimerRef.current){clearInterval(collectProgressTimerRef.current);collectProgressTimerRef.current=null;}if(collectActionTimeoutRef.current){clearTimeout(collectActionTimeoutRef.current);collectActionTimeoutRef.current=null;}// Reset UI states related to manual collection if death interrupts it\nsetCollecting(false);setCooldown(0);}// Cleanup refs on component unmount (optional, but good practice)\nreturn()=>{if(collectProgressTimerRef.current){clearInterval(collectProgressTimerRef.current);}if(collectActionTimeoutRef.current){clearTimeout(collectActionTimeoutRef.current);}};},[dead]);// Run this effect when 'dead' state changes\n// =================== 建筑相关功能 ===================\nconst buildOrUpgradeBuilding=type=>{if(dead)return;const woodResource=resources.find(r=>r.key==='wood');const stoneResource=resources.find(r=>r.key==='stone');const ironResource=resources.find(r=>r.key==='iron');if(type==='trap'){if(woodResource&&woodResource.value>=10&&stoneResource&&stoneResource.value>=5){setResources(rs=>rs.map(r=>{if(r.key==='wood')return{...r,value:r.value-10};if(r.key==='stone')return{...r,value:r.value-5};return r;}));setBuildings(bs=>{const exist=bs.find(b=>b.type==='trap');if(exist)return bs.map(b=>b.type==='trap'?{...b,level:(b.level||1)+1}:b);return[...bs,{type:'trap',level:1}];});addLog('建造/升级了陷阱。');}else{alert('建造/升级陷阱需要10木材和5石头！');}}else if(type==='expansion'){if(woodResource&&woodResource.value>=30&&stoneResource&&stoneResource.value>=20){setResources(rs=>rs.map(r=>{if(r.key==='wood')return{...r,value:r.value-30};if(r.key==='stone')return{...r,value:r.value-20};return r;}));setBuildings(bs=>{const exist=bs.find(b=>b.type==='expansion');if(exist)return bs.map(b=>b.type==='expansion'?{...b,level:(b.level||1)+1}:b);return[...bs,{type:'expansion',level:1}];});setPopulation(p=>p+2);addLog('扩建成功，人口上限提升。');}else{alert('扩建需要30木材和20石头！');}}else if(type==='hunter'){if(woodResource&&woodResource.value>=20&&ironResource&&ironResource.value>=10){setResources(rs=>rs.map(r=>{if(r.key==='wood')return{...r,value:r.value-20};if(r.key==='iron')return{...r,value:r.value-10};return r;}));setBuildings(bs=>{const exist=bs.find(b=>b.type==='hunter');if(exist)return bs.map(b=>b.type==='hunter'?{...b,level:(b.level||1)+1}:b);return[...bs,{type:'hunter',level:1}];});addLog('建造/升级了猎人小屋。');}else{alert('建造/升级猎人小屋需要20木材和10铁矿石！');}}};const triggerTrapOrHunt=type=>{if(type==='trap'){const trapBuilding=buildings.find(b=>b.type==='trap');if(!trapBuilding){alert('请先建造陷阱！');return;}const trapLevel=trapBuilding.level||1;const rand=Math.random();if(rand<0.5+0.1*(trapLevel-1)){setSpecialMaterials(sm=>({...sm,fur:sm.fur+1,meat:sm.meat+1}));addLog('陷阱捕获到一只小动物，获得毛皮和鲜肉！');}else{addLog('陷阱未能捕获到猎物。');}}else if(type==='hunter'){const hunterLodge=buildings.find(b=>b.type==='hunter');if(!hunterLodge){alert('请先建造猎人小屋！');return;}const hunterLevel=hunterLodge.level||1;const rand=Math.random();if(rand<0.4+0.12*(hunterLevel-1)){setSpecialMaterials(sm=>({...sm,scale:sm.scale+1,tooth:sm.tooth+1}));addLog('猎人小屋狩猎成功，获得鳞片和兽齿！');}else{addLog('猎人小屋狩猎失败。');}}};// 渲染标签页内容\nconst renderTabContent=()=>{switch(activeTab){case'房子':return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:collectResource,disabled:collecting||cooldown>0||dead,style:{position:'relative',marginRight:12,padding:'8px 16px',overflow:'hidden',width:120},children:[dead?'已死亡':collecting||cooldown>0?'采集中...':'采集',(collecting||cooldown>0)&&!dead&&/*#__PURE__*/_jsx(\"span\",{style:{position:'absolute',left:0,bottom:0,height:4,width:`${(cooldown>0?cooldown:1)*100}%`,background:'#2196f3',transition:'width 0.1s linear',zIndex:1,borderRadius:2,pointerEvents:'none'}})]}),/*#__PURE__*/_jsx(\"button\",{onClick:hireWorker,disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u62DB\\u52DF\\u5DE5\\u4EBA\\uFF0810\\u6728\\u6750\\uFF0C\\u63D0\\u5347\\u7B49\\u7EA7\\uFF09\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addWood,disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u6DFB\\u52A0\\u6728\\u6750\\uFF08-1\\uFF09\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16,marginBottom:8,color:weather.temp<=-10?'#c00':'#2196f3',fontWeight:'bold'},children:[\"\\u5929\\u6C14\\uFF1A\",weather.desc,\"\\uFF0C\\u6E29\\u5EA6\\uFF1A\",weather.temp,\"\\u2103\"]})]});case'建筑':// 建筑功能达到 buildingUnlockLevel 级开放\nif(level<buildingUnlockLevel){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{style:{color:'#c00'},children:`建筑功能将在${buildingUnlockLevel}级后解锁，当前等级：${level}`}),/*#__PURE__*/_jsx(\"button\",{disabled:true,style:{marginRight:12,padding:'8px 16px'},children:\"\\u5EFA\\u9020\\u623F\\u5B50\\uFF08\\u672A\\u89E3\\u9501\\uFF09\"})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:buildHouse,disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u7B49\\u7EA710\\u89E3\\u9501\\u5EFA\\u9020\\u623F\\u5B50\\uFF0C\\u623F\\u5B50\\u53EF\\u9632\\u6B62\\u6781\\u5BD2\\u5929\\u6C14\\u51BB\\u6B7B\\u3002\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>buildOrUpgradeBuilding('trap'),disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u5EFA\\u9020/\\u5347\\u7EA7\\u9677\\u9631\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>buildOrUpgradeBuilding('expansion'),disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u5EFA\\u9020/\\u5347\\u7EA7\\u6269\\u5EFA\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>buildOrUpgradeBuilding('hunter'),disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u5EFA\\u9020/\\u5347\\u7EA7\\u730E\\u4EBA\\u5C0F\\u5C4B\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>triggerTrapOrHunt('trap'),disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u89E6\\u53D1\\u9677\\u9631\\u6355\\u83B7\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>triggerTrapOrHunt('hunter'),disabled:dead,style:{marginRight:12,padding:'8px 16px'},children:\"\\u730E\\u4EBA\\u5C0F\\u5C4B\\u72E9\\u730E\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:16,marginBottom:8},children:buildings.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold',marginBottom:4},children:\"\\u5DF2\\u5EFA\\u9020\\u7684\\u5EFA\\u7B51\\uFF1A\"}),buildings.map(b=>/*#__PURE__*/_jsx(\"div\",{children:b.type==='house'?`房子 x${b.count}`:b.type==='trap'?`陷阱 Lv.${b.level||1}`:b.type==='expansion'?`扩建 Lv.${b.level||1}`:b.type==='hunter'?`猎人小屋 Lv.${b.level||1}`:b.type},b.type))]}):/*#__PURE__*/_jsx(\"div\",{children:\"\\u6682\\u65E0\\u5EFA\\u7B51\\uFF0C\\u8BF7\\u5148\\u5EFA\\u9020\\u4E00\\u4E9B\\u5EFA\\u7B51\\u3002\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:8},children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u4EBA\\u53E3\\uFF1A\",population]}),/*#__PURE__*/_jsxs(\"span\",{style:{marginLeft:12},children:[\"\\u6BDB\\u76AE\\uFF1A\",specialMaterials.fur,\" \\u9C9C\\u8089\\uFF1A\",specialMaterials.meat,\" \\u9CDE\\u7247\\uFF1A\",specialMaterials.scale,\" \\u517D\\u9F7F\\uFF1A\",specialMaterials.tooth]})]})]});case'探险':// 探险功能达到 adventureUnlockLevel 级开放\nconst adventureUnlockLevelTab=30;// 定义探险解锁等级\nif(level<adventureUnlockLevelTab){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{style:{color:'#c00'},children:`探险功能将在${adventureUnlockLevelTab}级后解锁，当前等级：${level}`}),/*#__PURE__*/_jsx(\"button\",{disabled:true,style:{marginRight:12,padding:'8px 16px'},children:\"\\u5F00\\u59CB\\u63A2\\u9669\\uFF08\\u672A\\u89E3\\u9501\\uFF09\"})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u63A2\\u9669\\u529F\\u80FD\\u5C1A\\u672A\\u5F00\\u653E\\uFF0C\\u656C\\u8BF7\\u671F\\u5F85\\uFF01\"}),/*#__PURE__*/_jsx(\"button\",{disabled:true,style:{marginRight:12,padding:'8px 16px'},children:\"\\u5F00\\u59CB\\u63A2\\u9669\\uFF08\\u5373\\u5C06\\u63A8\\u51FA\\uFF09\"})]});default:return/*#__PURE__*/_jsx(\"div\",{children:\"\\u672A\\u77E5\\u6807\\u7B7E\\u9875\"});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",style:{padding:24,fontFamily:'sans-serif'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',alignItems:'flex-start',justifyContent:'flex-start'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:220,minHeight:400,marginRight:32,background:'#f7f7f7',border:'1px solid #ccc',borderRadius:6,padding:12,textAlign:'left',fontSize:14,color:'#333',overflowY:'auto',height:480},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold',marginBottom:8},children:\"\\u65E5\\u5FD7\\u8BB0\\u5F55\"}),/*#__PURE__*/_jsx(\"ul\",{style:{padding:0,margin:0,listStyle:'none'},children:logs.map((log,idx)=>/*#__PURE__*/_jsx(\"li\",{style:{opacity:idx>20?0.5:1},children:log},idx))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'row',width:'100%',maxWidth:1000,justifyContent:'space-between',alignItems:'flex-start'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,minWidth:0,marginRight:32,textAlign:'left'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',marginBottom:16},children:[/*#__PURE__*/_jsx(\"h1\",{style:{marginRight:20,display:'flex',alignItems:'center',justifyContent:'center'},children:\"\\u6253\\u9020\\u672B\\u65E5\\u5B89\\u5168\\u5C4B\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center'},children:['房子','建筑','探险'].map(tab=>{const adventureUnlockLevel=30;const buildingUnlockLevel=10;const isAdventure=tab==='探险';const isBuilding=tab==='建筑';const adventureLocked=isAdventure&&level<adventureUnlockLevel;const buildingLocked=isBuilding&&level<buildingUnlockLevel;const locked=adventureLocked||buildingLocked;return/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{if(!locked)setActiveTab(tab);},disabled:locked,style:{marginRight:12,padding:'8px 16px',borderRadius:activeTab===tab?'4px 4px 4px 4px':'4px',backgroundColor:activeTab===tab?'#2196f3':'#f5f5f5',color:activeTab===tab?'#fff':locked?'#aaa':'#333',fontWeight:activeTab===tab?'bold':'normal',border:activeTab===tab?'2px solid #2196f3':'1px solid #ccc',borderBottom:activeTab===tab?'none':'1px solid #ccc',boxShadow:activeTab===tab?'0 -2px 5px rgba(0,0,0,0.1)':'none',position:'relative',top:activeTab===tab?'1px':'0',minWidth:80},title:locked?isAdventure?`达到${adventureUnlockLevel}级后解锁探险`:isBuilding?`达到${buildingUnlockLevel}级后解锁建筑`:'':'',children:[tab,locked&&/*#__PURE__*/_jsx(\"span\",{style:{fontSize:12,marginLeft:2},children:\"(\\u672A\\u89E3\\u9501)\"})]},tab);})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:16},children:[/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:18,marginRight:16},children:[getStageName(level),\"\\uFF1A\",level,\"/\",getStageExp(level),\"\\uFF08\\u7ECF\\u9A8C\\uFF1A\",exp,\"/\",getStageExp(level),\"\\uFF09\"]}),/*#__PURE__*/_jsxs(\"span\",{style:{fontSize:18},children:[\"\\u5DE5\\u4EBA\\uFF1A\",workers]})]}),renderTabContent()]}),/*#__PURE__*/_jsxs(\"div\",{style:{minWidth:220,marginLeft:0,border:'1px solid #aaa',borderRadius:6,padding:12,background:'#fff',width:220},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'bold',marginBottom:4,textAlign:'center'},children:\"\\u5E93\\u5B58\"}),/*#__PURE__*/_jsx(\"table\",{style:{borderCollapse:'collapse',fontSize:16,width:'100%'},children:/*#__PURE__*/_jsx(\"tbody\",{children:resources.filter(r=>r.value>0).map((r,idx)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'2px 8px',textAlign:'right',color:idx===0?'#333':'#666'},children:r.name}),/*#__PURE__*/_jsxs(\"td\",{style:{padding:'2px 8px',textAlign:'right',fontWeight:idx===0?'bold':'normal'},children:[Math.floor(r.value),r.perSec>0&&/*#__PURE__*/_jsxs(\"span\",{style:{color:'green',fontSize:14,marginLeft:2},children:[\"(+\",r.perSec,\")\"]})]})]},r.key))})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:40,color:'#888',paddingTop:20,textAlign:'center',maxWidth:800,margin:'0 auto'},children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u6BCF\\u4E2A\\u5DE5\\u4EBA\\u6BCF\\u79D2\\u81EA\\u52A8\\u91C7\\u96C6\\u6240\\u6709\\u6709\\u589E\\u957F\\u901F\\u7387\\u7684\\u8D44\\u6E90\\u3002\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u62DB\\u52DF\\u5DE5\\u4EBA\\u6D88\\u801710\\u6728\\u6750\\u5E76\\u63D0\\u5347\\u7B49\\u7EA7\\uFF0C\\u7B49\\u7EA7\\u8D8A\\u9AD8\\u91C7\\u96C6\\u51B7\\u5374\\u8D8A\\u77ED\\uFF08\\u6700\\u4F4E0.5\\u79D2\\uFF09\\u3002\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u7B49\\u7EA710\\u89E3\\u9501\\u5EFA\\u9020\\u623F\\u5B50\\uFF0C\\u623F\\u5B50\\u53EF\\u9632\\u6B62\\u6781\\u5BD2\\u5929\\u6C14\\u51BB\\u6B7B\\u3002\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u5929\\u6C14\\u7CFB\\u7EDF\\uFF1A\\u6E29\\u5EA6\\u8FC7\\u4F4E\\u4E14\\u65E0\\u623F\\u5B50\\u65F6\\u4F1A\\u5BFC\\u81F4\\u89D2\\u8272\\u6B7B\\u4EA1\\u3002\"})]})]});}export default App;/*#__PURE__*/_jsx(\"style\",{children:`@keyframes spin { 0% { transform: rotate(0deg);} 100% { transform: rotate(360deg);} }\\n@keyframes progressBarFill { 0% { transform: scaleX(0);} 100% { transform: scaleX(1);} }`});","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","activeTab","setActiveTab","buildingUnlockLevel","initialResources","name","key","value","perSec","resources","setResources","workers","setWorkers","level","setLevel","exp","setExp","collecting","setCollecting","cooldown","setCooldown","logs","setLogs","buildings","setBuildings","population","setPopulation","specialMaterials","setSpecialMaterials","fur","meat","scale","tooth","weather","setWeather","temp","desc","tick","dead","setDead","collectProgressTimerRef","useRef","collectActionTimeoutRef","levelStages","maxLevel","getStage","lv","getStageName","getStageExp","getCooldownDuration","addLog","msg","slice","collectResource","cooldownDuration","start","Date","now","current","clearInterval","clearTimeout","setInterval","elapsed","progress","Math","max","setTimeout","_resources$find","selectedKey","resourceTiers","weight","availableTierResources","totalWeight","reduce","sum","r","rand","random","i","length","rs","map","find","prevExp","nextExp","nextLevel","stageExp","changed","hireWorker","idx","w","alert","buildHouse","bs","exist","b","type","count","addWood","wood","interval","_buildings$find","floor","min","houseCount","currentResources","newResources","toFixed","some","collectedResource","amountCollected","currentLevelForExpCalc","nextLevelCandidate","levelDidChange","buildOrUpgradeBuilding","woodResource","stoneResource","ironResource","p","triggerTrapOrHunt","trapBuilding","trapLevel","sm","hunterLodge","hunterLevel","renderTabContent","children","onClick","disabled","style","position","marginRight","padding","overflow","width","left","bottom","height","background","transition","zIndex","borderRadius","pointerEvents","marginTop","marginBottom","color","fontWeight","marginLeft","adventureUnlockLevelTab","className","fontFamily","display","flexDirection","alignItems","justifyContent","minHeight","border","textAlign","fontSize","overflowY","margin","listStyle","log","opacity","maxWidth","flex","minWidth","tab","adventureUnlockLevel","isAdventure","isBuilding","adventureLocked","buildingLocked","locked","backgroundColor","borderBottom","boxShadow","top","title","borderCollapse","filter","paddingTop"],"sources":["C:/Users/Administrator/Desktop/新建文件夹 (2)/react-resource-collector/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./app.css\";\n\nfunction App() {\n  // 标签页状态\n  const [activeTab, setActiveTab] = useState('房子');\n  // 建筑标签页解锁等级\n  const buildingUnlockLevel = 10;\n  \n  // 资源与工人状态\n  const initialResources = [\n    { name: '铁矿石', key: 'iron', value: 0, perSec: 0 },\n    { name: '铜矿石', key: 'copper', value: 0, perSec: 0 },\n    { name: '木材', key: 'wood', value: 0, perSec: 0 },\n    { name: '石头', key: 'stone', value: 0, perSec: 0 },\n    { name: '黄金', key: 'gold', value: 0, perSec: 0 }\n  ];\n  const [resources, setResources] = useState(initialResources);\n  const [workers, setWorkers] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [exp, setExp] = useState(0);\n  const [collecting, setCollecting] = useState(false);\n  const [cooldown, setCooldown] = useState(0);\n  // 日志记录\n  const [logs, setLogs] = useState([\"游戏开始。\"]);\n  // 建筑系统\n  const [buildings, setBuildings] = useState([]); // {type: 'house', count: 1, level: 1, ...}\n  // 新增人口与材料状态\n  const [population, setPopulation] = useState(0);\n  const [specialMaterials, setSpecialMaterials] = useState({fur:0,meat:0,scale:0,tooth:0});\n  // 天气系统\n  const [weather, setWeather] = useState({ temp: 25, desc: '晴朗', tick: 0 });\n  const [dead, setDead] = useState(false);\n  const collectProgressTimerRef = React.useRef(null);\n  const collectActionTimeoutRef = React.useRef(null);\n  // 等级阶段与经验需求\n  const levelStages = [\n    { name: '初级', maxLevel: 3, exp: 100 },\n    { name: '中级', maxLevel: 6, exp: 200 },\n    { name: '高级', maxLevel: 99, exp: 500 }\n  ];\n  const getStage = (lv) => {\n    if (lv < 3) return levelStages[0];\n    if (lv < 6) return levelStages[1];\n    return levelStages[2];\n  };\n  const getStageName = (lv) => getStage(lv).name;\n  const getStageExp = (lv) => getStage(lv).exp;\n  // 冷却时间随等级提升递减，最低0.5秒\n  const getCooldownDuration = () => {\n    if (level <= 1) return 800; // 1级采集时间为0.8秒\n    if (level <= 3) return 1200 + (level - 1) * 200; // 2-3级逐步加长\n    if (level <= 6) return 1800 + (level - 3) * 300; // 4-6级再加长\n    return 2700 + (level - 6) * 100; // 7级及以上缓慢递增\n  };\n  \n  // 日志添加\n  const addLog = (msg) => setLogs(logs => [msg, ...logs.slice(0, 49)]);\n  // 手动采集资源（采集）\n  const collectResource = () => {\n    if (dead || collecting) return; // Prevent action if dead or already collecting\n\n    setCollecting(true);\n    setCooldown(1);\n    const cooldownDuration = getCooldownDuration();\n    const start = Date.now();\n\n    // Clear any existing timers from a previous, possibly interrupted, collection attempt\n    if (collectProgressTimerRef.current) {\n      clearInterval(collectProgressTimerRef.current);\n      collectProgressTimerRef.current = null;\n    }\n    if (collectActionTimeoutRef.current) {\n      clearTimeout(collectActionTimeoutRef.current);\n      collectActionTimeoutRef.current = null;\n    }\n\n    collectProgressTimerRef.current = setInterval(() => {\n      const elapsed = Date.now() - start;\n      const progress = Math.max(0, 1 - elapsed / cooldownDuration);\n      setCooldown(progress);\n      if (elapsed >= cooldownDuration) {\n        clearInterval(collectProgressTimerRef.current);\n        collectProgressTimerRef.current = null; // Clear ref\n        setCooldown(0); // Ensure cooldown visual is reset\n      }\n    }, 16);\n\n    collectActionTimeoutRef.current = setTimeout(() => {\n      // NOTE: The core logic for stopping this timeout if `dead` becomes true\n      // is handled by the new useEffect that cleans up `collectActionTimeoutRef.current`.\n\n      // 采集逻辑：根据等级和概率采集不同资源\n      // 采集逻辑：根据等级和概率采集不同资源\n      let selectedKey = 'wood'; // 默认采集木材\n      if (level > 1) {\n        // 定义资源等级和掉落概率\n        const resourceTiers = [\n          // 初级资源 (等级1时不应到这里，但保留结构以防万一)\n          [\n            { key: 'wood', weight: 100 } // 等级1只掉落木材\n          ],\n          // 中级资源 (从等级10开始)\n          [\n            { key: 'wood', weight: 40 }, // 木材概率高\n            { key: 'stone', weight: 25 }, // 石头概率中\n            { key: 'iron', weight: 20 }, // 铁矿石概率较低\n            { key: 'copper', weight: 10 }, // 铜矿石概率更低\n            { key: 'gold', weight: 5 } // 黄金极低概率\n          ],\n          // 高级资源 (从等级20开始)\n          [\n            { key: 'gold', weight: 20 }, // 黄金概率提升\n            { key: 'iron', weight: 30 },\n            { key: 'copper', weight: 25 },\n            { key: 'stone', weight: 15 },\n            { key: 'wood', weight: 10 } // 木材概率降低\n          ]\n        ];\n        // 根据等级解锁可采集资源\n        let availableTierResources = [];\n        if (level >= 20) { // 高级\n          availableTierResources = resourceTiers[2];\n        } else if (level >= 10) { // 中级\n          availableTierResources = resourceTiers[1];\n        } else { // 初级 (理论上 level > 1 且 < 10)\n          availableTierResources = resourceTiers[0];\n        }\n\n        // 概率加权采集\n        const totalWeight = availableTierResources.reduce((sum, r) => sum + r.weight, 0);\n        let rand = Math.random() * totalWeight;\n        for (let i = 0; i < availableTierResources.length; i++) {\n          rand -= availableTierResources[i].weight;\n          if (rand <= 0) {\n            selectedKey = availableTierResources[i].key;\n            break;\n          }\n        }\n      } else {\n        // 等级为1时，确保只采集木材\n        selectedKey = 'wood';\n      }\n      setResources(rs => rs.map(r => r.key === selectedKey ? { ...r, value: r.value + 1 } : r));\n      addLog(`采集获得了${resources.find(r=>r.key===selectedKey)?.name||selectedKey}`);\n      // 增加经验并处理升级\n      setExp(prevExp => {\n        let nextExp = prevExp + 10;\n        let nextLevel = level;\n        let stageExp = getStageExp(nextLevel);\n        let changed = false;\n        while (nextExp >= stageExp) {\n          nextExp -= stageExp;\n          nextLevel += 1;\n          stageExp = getStageExp(nextLevel);\n          changed = true;\n        }\n        if (changed) setLevel(nextLevel);\n        return nextExp;\n      });\n      setCollecting(false);\n      collectActionTimeoutRef.current = null; // Mark as completed/cleared\n    }, cooldownDuration);\n  };\n  \n  // 招募工人（提升等级）\n  const hireWorker = () => {\n    if (dead) return;\n    if (resources[2].value >= 10) {\n      setResources(rs => rs.map((r, idx) => {\n        if(idx === 2) return { ...r, value: r.value - 10 };\n        if(idx === 0) return { ...r, perSec: r.perSec + 0.1 }; // 铁矿石\n        if(idx === 1) return { ...r, perSec: r.perSec + 0.1 }; // 铜矿石\n        if(idx === 3) return { ...r, perSec: r.perSec + 0.1 }; // 石头\n        if(idx === 4) return { ...r, perSec: r.perSec + 0.05 }; // 黄金\n        return r;\n      }));\n      setWorkers(w => w + 1);\n      setLevel(lv => lv + 1);\n      addLog('招募一名工人。');\n    } else {\n      alert('招募工人需要10木材！');\n    }\n  };\n  // 建造房子\n  const buildHouse = () => {\n    if (dead) return;\n    if (resources[2].value >= 20 && resources[3].value >= 10) {\n      setResources(rs => rs.map((r, idx) => {\n        if(r.key==='wood') return { ...r, value: r.value - 20 };\n        if(r.key==='stone') return { ...r, value: r.value - 10 };\n        return r;\n      }));\n      setBuildings(bs => {\n        const exist = bs.find(b=>b.type==='house');\n        if(exist) return bs.map(b=>b.type==='house'?{...b,count:b.count+1}:b);\n        return [...bs, {type:'house', count:1}];\n      });\n      addLog('建造了一间房子。');\n    } else {\n      alert('建造房子需要20木材和10石头！');\n    }\n  };\n  // 添加木材按钮逻辑\n  const addWood = () => {\n    if (dead) return;\n    const wood = resources.find(r => r.key === 'wood');\n    if (wood && wood.value >= 1) {\n      setResources(rs => rs.map(r => r.key === 'wood' ? { ...r, value: r.value - 1 } : r));\n      setWeather(w => ({ ...w, temp: w.temp + 3 }));\n      addLog('消耗1木材，提升了室内温度3℃！');\n    } else {\n      alert('木材不足，无法提升温度！');\n    }\n  };\n  // 天气变化与生存检测\n  useEffect(() => {\n    if(dead) return;\n    const interval = setInterval(() => {\n      setWeather(w => {\n        let tick = w.tick + 1;\n        let temp = w.temp;\n        let desc = w.desc;\n        // 每10 tick变一次天气\n        if(tick % 10 === 0) {\n          const r = Math.random();\n          if(r < 0.3) { temp = Math.max(-20, temp - Math.floor(Math.random()*8+3)); desc = '暴风雪'; }\n          else if(r < 0.7) { temp = Math.max(-10, temp - Math.floor(Math.random()*4+1)); desc = '寒冷'; }\n          else { temp = Math.min(25, temp + Math.floor(Math.random()*6)); desc = '晴朗'; }\n          addLog(`天气变化：${desc}，温度${temp}℃`);\n        }\n        // 检查是否冻死\n        let houseCount = buildings.find(b=>b.type==='house')?.count||0;\n        if(temp <= -10 && houseCount === 0) {\n          setDead(true);\n          addLog('你被冻死了！游戏结束。');\n        }\n        return { temp, desc, tick };\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [dead, buildings]);\n  \n  // 自动采集逻辑\n  useEffect(() => {\n    if (dead) { // 如果角色已死亡，则不启动新的计时器，旧的计时器会被清理函数清除\n      return;\n    }\n    if (workers > 0) {\n      const interval = setInterval(() => {\n        setResources(currentResources => {\n          // 自动采集采用与手动采集一致的加权概率逻辑\n          let selectedKey = 'wood';\n          if (level > 1) {\n            // 自动采集的资源等级定义：\n            // - 初级 (等级 2-9): resourceTiers[0]\n            // - 中级 (等级 10-19): resourceTiers[1]\n            // - 高级 (等级 20+): resourceTiers[2]\n            const resourceTiers = [\n              [\n                { key: 'wood', weight: 80 }\n              ],\n              [\n                { key: 'wood', weight: 80 },\n                { key: 'stone', weight: 25 },\n                { key: 'iron', weight: 20 },\n                { key: 'copper', weight: 10 },\n                { key: 'gold', weight: 5 }\n              ],\n              [\n                { key: 'gold', weight: 20 },\n                { key: 'iron', weight: 30 },\n                { key: 'copper', weight: 25 },\n                { key: 'stone', weight: 15 },\n                { key: 'wood', weight: 80 }\n              ]\n            ];\n            let availableTierResources = [];\n            if (level >= 20) {\n              availableTierResources = resourceTiers[2];\n            } else if (level >= 10) {\n              availableTierResources = resourceTiers[1];\n            } else {\n              availableTierResources = resourceTiers[0];\n            }\n            const totalWeight = availableTierResources.reduce((sum, r) => sum + r.weight, 0);\n            let rand = Math.random() * totalWeight;\n            for (let i = 0; i < availableTierResources.length; i++) {\n              rand -= availableTierResources[i].weight;\n              if (rand <= 0) {\n                selectedKey = availableTierResources[i].key;\n                break;\n              }\n            }\n          } else {\n            selectedKey = 'wood';\n          }\n          // 增加采集到的资源\n          const newResources = currentResources.map(r => r.key === selectedKey ? { ...r, value: +(r.value + (r.perSec > 0 ? r.perSec : 1)).toFixed(2) } : r);\n          // 只有资源实际增加时才增加经验\n          if (newResources.some((r, idx) => newResources[idx].value > currentResources[idx].value)) {\n            const collectedResource = newResources.find(r => r.key === selectedKey);\n            if (collectedResource) {\n              const amountCollected = +( (collectedResource.perSec > 0 ? collectedResource.perSec : 1) * workers ).toFixed(2);\n              addLog(`工人自动采集获得了 ${amountCollected} ${collectedResource.name || selectedKey}。`);\n            }\n            setExp(prevExp => {\n              let currentLevelForExpCalc = level; \n              let nextExp = prevExp + 5 * workers;\n              let nextLevelCandidate = currentLevelForExpCalc;\n              let stageExp = getStageExp(nextLevelCandidate);\n              let levelDidChange = false;\n              while (nextExp >= stageExp) {\n                nextExp -= stageExp;\n                nextLevelCandidate += 1;\n                stageExp = getStageExp(nextLevelCandidate);\n                levelDidChange = true;\n              }\n              if (levelDidChange) {\n                setLevel(nextLevelCandidate); \n              }\n              return nextExp; \n            });\n          }\n          return newResources; \n        });\n      }, 3000); // 自动采集间隔调整为3000ms\n      return () => clearInterval(interval);\n    }\n  }, [workers, level, dead, addLog, resources]); // 将 addLog 和 resources 添加到依赖项数组\n\n  // Effect to clear manual collection timers if player dies\n  useEffect(() => {\n    if (dead) {\n      if (collectProgressTimerRef.current) {\n        clearInterval(collectProgressTimerRef.current);\n        collectProgressTimerRef.current = null;\n      }\n      if (collectActionTimeoutRef.current) {\n        clearTimeout(collectActionTimeoutRef.current);\n        collectActionTimeoutRef.current = null;\n      }\n      // Reset UI states related to manual collection if death interrupts it\n      setCollecting(false);\n      setCooldown(0);\n    }\n    // Cleanup refs on component unmount (optional, but good practice)\n    return () => {\n      if (collectProgressTimerRef.current) {\n        clearInterval(collectProgressTimerRef.current);\n      }\n      if (collectActionTimeoutRef.current) {\n        clearTimeout(collectActionTimeoutRef.current);\n      }\n    };\n  }, [dead]); // Run this effect when 'dead' state changes\n\n  // =================== 建筑相关功能 ===================\n  const buildOrUpgradeBuilding = (type) => {\n    if (dead) return;\n    const woodResource = resources.find(r => r.key === 'wood');\n    const stoneResource = resources.find(r => r.key === 'stone');\n    const ironResource = resources.find(r => r.key === 'iron');\n\n    if (type === 'trap') {\n      if (woodResource && woodResource.value >= 10 && stoneResource && stoneResource.value >= 5) {\n        setResources(rs => rs.map(r => {\n          if (r.key === 'wood') return { ...r, value: r.value - 10 };\n          if (r.key === 'stone') return { ...r, value: r.value - 5 };\n          return r;\n        }));\n        setBuildings(bs => {\n          const exist = bs.find(b => b.type === 'trap');\n          if (exist) return bs.map(b => b.type === 'trap' ? { ...b, level: (b.level || 1) + 1 } : b);\n          return [...bs, { type: 'trap', level: 1 }];\n        });\n        addLog('建造/升级了陷阱。');\n      } else {\n        alert('建造/升级陷阱需要10木材和5石头！');\n      }\n    } else if (type === 'expansion') {\n      if (woodResource && woodResource.value >= 30 && stoneResource && stoneResource.value >= 20) {\n        setResources(rs => rs.map(r => {\n          if (r.key === 'wood') return { ...r, value: r.value - 30 };\n          if (r.key === 'stone') return { ...r, value: r.value - 20 };\n          return r;\n        }));\n        setBuildings(bs => {\n          const exist = bs.find(b => b.type === 'expansion');\n          if (exist) return bs.map(b => b.type === 'expansion' ? { ...b, level: (b.level || 1) + 1 } : b);\n          return [...bs, { type: 'expansion', level: 1 }];\n        });\n        setPopulation(p => p + 2);\n        addLog('扩建成功，人口上限提升。');\n      } else {\n        alert('扩建需要30木材和20石头！');\n      }\n    } else if (type === 'hunter') {\n      if (woodResource && woodResource.value >= 20 && ironResource && ironResource.value >= 10) {\n        setResources(rs => rs.map(r => {\n          if (r.key === 'wood') return { ...r, value: r.value - 20 };\n          if (r.key === 'iron') return { ...r, value: r.value - 10 };\n          return r;\n        }));\n        setBuildings(bs => {\n          const exist = bs.find(b => b.type === 'hunter');\n          if (exist) return bs.map(b => b.type === 'hunter' ? { ...b, level: (b.level || 1) + 1 } : b);\n          return [...bs, { type: 'hunter', level: 1 }];\n        });\n        addLog('建造/升级了猎人小屋。');\n      } else {\n        alert('建造/升级猎人小屋需要20木材和10铁矿石！');\n      }\n    }\n  };\n\n  const triggerTrapOrHunt = (type) => {\n    if (type === 'trap') {\n      const trapBuilding = buildings.find(b => b.type === 'trap');\n      if (!trapBuilding) {\n        alert('请先建造陷阱！');\n        return;\n      }\n      const trapLevel = trapBuilding.level || 1;\n      const rand = Math.random();\n      if (rand < 0.5 + 0.1 * (trapLevel - 1)) {\n        setSpecialMaterials(sm => ({ ...sm, fur: sm.fur + 1, meat: sm.meat + 1 }));\n        addLog('陷阱捕获到一只小动物，获得毛皮和鲜肉！');\n      } else {\n        addLog('陷阱未能捕获到猎物。');\n      }\n    } else if (type === 'hunter') {\n      const hunterLodge = buildings.find(b => b.type === 'hunter');\n      if (!hunterLodge) {\n        alert('请先建造猎人小屋！');\n        return;\n      }\n      const hunterLevel = hunterLodge.level || 1;\n      const rand = Math.random();\n      if (rand < 0.4 + 0.12 * (hunterLevel - 1)) {\n        setSpecialMaterials(sm => ({ ...sm, scale: sm.scale + 1, tooth: sm.tooth + 1 }));\n        addLog('猎人小屋狩猎成功，获得鳞片和兽齿！');\n      } else {\n        addLog('猎人小屋狩猎失败。');\n      }\n    }\n  };\n  \n  // 渲染标签页内容\n  const renderTabContent = () => {\n    switch(activeTab) {\n      case '房子':\n        return (\n          <div>\n            <button onClick={collectResource} disabled={collecting || cooldown > 0 || dead} style={{ position: 'relative', marginRight: 12, padding: '8px 16px', overflow: 'hidden', width: 120 }}>\n              {dead ? '已死亡' : (collecting || cooldown > 0 ? '采集中...' : '采集')}\n              {(collecting || cooldown > 0) && !dead && (\n                <span style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  height: 4,\n                  width: `${(cooldown > 0 ? cooldown : 1) * 100}%`,\n                  background: '#2196f3',\n                  transition: 'width 0.1s linear',\n                  zIndex: 1,\n                  borderRadius: 2,\n                  pointerEvents: 'none',\n                }} />\n              )}\n            </button>\n            <button onClick={hireWorker} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>招募工人（10木材，提升等级）</button>\n            <button onClick={addWood} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>添加木材（-1）</button>\n            \n            {/* 天气显示 */}\n            <div style={{ marginTop: 16, marginBottom: 8, color: weather.temp<=-10?'#c00':'#2196f3', fontWeight: 'bold' }}>\n              天气：{weather.desc}，温度：{weather.temp}℃\n            </div>\n          </div>\n        );\n      case '建筑':\n        // 建筑功能达到 buildingUnlockLevel 级开放\n        if (level < buildingUnlockLevel) {\n          return (\n            <div>\n              <p style={{color:'#c00'}}>{`建筑功能将在${buildingUnlockLevel}级后解锁，当前等级：${level}`}</p>\n              <button disabled style={{ marginRight: 12, padding: '8px 16px' }}>建造房子（未解锁）</button>\n            </div>\n          );\n        }\n        return (\n          <div>\n            <button onClick={buildHouse} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>等级10解锁建造房子，房子可防止极寒天气冻死。</button>\n            {/* 新增功能性建筑按钮 */}\n            <button onClick={()=>buildOrUpgradeBuilding('trap')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>建造/升级陷阱</button>\n            <button onClick={()=>buildOrUpgradeBuilding('expansion')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>建造/升级扩建</button>\n            <button onClick={()=>buildOrUpgradeBuilding('hunter')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>建造/升级猎人小屋</button>\n            {/* 功能性建筑操作 */}\n            <button onClick={()=>triggerTrapOrHunt('trap')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>触发陷阱捕获</button>\n            <button onClick={()=>triggerTrapOrHunt('hunter')} disabled={dead} style={{ marginRight: 12, padding: '8px 16px' }}>猎人小屋狩猎</button>\n            {/* 展示建筑 */}\n            <div style={{ marginTop: 16, marginBottom: 8 }}>\n              {buildings.length > 0 ? (\n                <>\n                  <div style={{ fontWeight: 'bold', marginBottom: 4 }}>已建造的建筑：</div>\n                  {buildings.map(b => (\n                    <div key={b.type}>\n                      {b.type==='house'?`房子 x${b.count}`:\n                        b.type==='trap'?`陷阱 Lv.${b.level||1}`:\n                        b.type==='expansion'?`扩建 Lv.${b.level||1}`:\n                        b.type==='hunter'?`猎人小屋 Lv.${b.level||1}`:b.type}\n                    </div>\n                  ))}\n                </>\n              ) : (\n                <div>暂无建筑，请先建造一些建筑。</div>\n              )}\n            </div>\n            {/* 展示特殊材料与人口 */}\n            <div style={{marginTop:8}}>\n              <span>人口：{population}</span>\n              <span style={{marginLeft:12}}>毛皮：{specialMaterials.fur} 鲜肉：{specialMaterials.meat} 鳞片：{specialMaterials.scale} 兽齿：{specialMaterials.tooth}</span>\n            </div>\n          </div>\n        );\n      case '探险':\n        // 探险功能达到 adventureUnlockLevel 级开放\n        const adventureUnlockLevelTab = 30; // 定义探险解锁等级\n        if (level < adventureUnlockLevelTab) {\n          return (\n            <div>\n              <p style={{color:'#c00'}}>{`探险功能将在${adventureUnlockLevelTab}级后解锁，当前等级：${level}`}</p>\n              <button disabled style={{ marginRight: 12, padding: '8px 16px' }}>开始探险（未解锁）</button>\n            </div>\n          );\n        }\n        return (\n          <div>\n            <p>探险功能尚未开放，敬请期待！</p>\n            <button disabled style={{ marginRight: 12, padding: '8px 16px' }}>开始探险（即将推出）</button>\n          </div>\n        );\n      default:\n        return <div>未知标签页</div>;\n    }\n  };\n\n  return (\n    <div className=\"App\" style={{ padding: 24, fontFamily: 'sans-serif' }}>\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'flex-start', justifyContent: 'flex-start' }}>\n        {/* 日志区块 */}\n        <div style={{ width: 220, minHeight: 400, marginRight: 32, background: '#f7f7f7', border: '1px solid #ccc', borderRadius: 6, padding: 12, textAlign: 'left', fontSize: 14, color: '#333', overflowY: 'auto', height: 480 }}>\n          <div style={{ fontWeight: 'bold', marginBottom: 8 }}>日志记录</div>\n          <ul style={{ padding: 0, margin: 0, listStyle: 'none' }}>\n            {logs.map((log, idx) => <li key={idx} style={{ opacity: idx>20?0.5:1 }}>{log}</li>)}\n          </ul>\n        </div>\n        {/* 主体内容和库存左右排版容器 */}\n        <div style={{ display: 'flex', flexDirection: 'row', width: '100%', maxWidth: 1000, justifyContent: 'space-between', alignItems: 'flex-start' }}>\n          {/* 主体内容区块 */}\n          <div style={{ flex: 1, minWidth: 0, marginRight: 32, textAlign: 'left' }}>\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: 16 }}>\n              <h1 style={{ marginRight: 20, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>打造末日安全屋</h1>\n              {/* 标签页导航 */}\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                {['房子', '建筑', '探险'].map(tab => {\n                  const adventureUnlockLevel = 30;\n                  const buildingUnlockLevel = 10;\n                  const isAdventure = tab === '探险';\n                  const isBuilding = tab === '建筑';\n                  const adventureLocked = isAdventure && level < adventureUnlockLevel;\n                  const buildingLocked = isBuilding && level < buildingUnlockLevel;\n                  const locked = adventureLocked || buildingLocked;\n                  return (\n                    <button\n                      key={tab}\n                      onClick={() => {\n                        if (!locked) setActiveTab(tab);\n                      }}\n                      disabled={locked}\n                      style={{\n                        marginRight: 12,\n                        padding: '8px 16px',\n                        borderRadius: activeTab === tab ? '4px 4px 4px 4px' : '4px',\n                        backgroundColor: activeTab === tab ? '#2196f3' : '#f5f5f5',\n                        color: activeTab === tab ? '#fff' : locked ? '#aaa' : '#333',\n                        fontWeight: activeTab === tab ? 'bold' : 'normal',\n                        border: activeTab === tab ? '2px solid #2196f3' : '1px solid #ccc',\n                        borderBottom: activeTab === tab ? 'none' : '1px solid #ccc',\n                        boxShadow: activeTab === tab ? '0 -2px 5px rgba(0,0,0,0.1)' : 'none',\n                        position: 'relative',\n                        top: activeTab === tab ? '1px' : '0',\n                        minWidth: 80\n                      }}\n                      title={locked ? (isAdventure ? `达到${adventureUnlockLevel}级后解锁探险` : isBuilding ? `达到${buildingUnlockLevel}级后解锁建筑` : '') : ''}\n                    >\n                      {tab}\n                      {locked && <span style={{ fontSize: 12, marginLeft: 2 }}>(未解锁)</span>}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n            <div style={{ marginBottom: 16 }}>\n              <span style={{ fontSize: 18, marginRight: 16 }}>{getStageName(level)}：{level}/{getStageExp(level)}（经验：{exp}/{getStageExp(level)}）</span>\n              <span style={{ fontSize: 18 }}>工人：{workers}</span>\n            </div>\n            \n            {/* 标签页内容 */}\n            {renderTabContent()}\n          </div>\n          {/* 库存内容区块 */}\n          <div style={{ minWidth: 220, marginLeft: 0, border: '1px solid #aaa', borderRadius: 6, padding: 12, background: '#fff', width: 220 }}>\n            <div style={{ fontWeight: 'bold', marginBottom: 4, textAlign: 'center' }}>库存</div>\n            <table style={{ borderCollapse: 'collapse', fontSize: 16, width: '100%' }}>\n              <tbody>\n                {resources.filter(r => r.value > 0).map((r, idx) => (\n                  <tr key={r.key}>\n                    <td style={{ padding: '2px 8px', textAlign: 'right', color: idx === 0 ? '#333' : '#666' }}>{r.name}</td>\n                    <td style={{ padding: '2px 8px', textAlign: 'right', fontWeight: idx === 0 ? 'bold' : 'normal' }}>\n                      {Math.floor(r.value)}\n                      {r.perSec > 0 && (\n                        <span style={{ color: 'green', fontSize: 14, marginLeft: 2 }}>\n                          (+{r.perSec})\n                        </span>\n                      )}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      \n      {/* 游戏说明区块 - 移动到页面底部 */}\n      <div style={{ marginTop: 40, color: '#888', paddingTop: 20, textAlign: 'center', maxWidth: 800, margin: '0 auto' }}>\n        <p>每个工人每秒自动采集所有有增长速率的资源。</p>\n        <p>招募工人消耗10木材并提升等级，等级越高采集冷却越短（最低0.5秒）。</p>\n        <p>等级10解锁建造房子，房子可防止极寒天气冻死。</p>\n        <p>天气系统：温度过低且无房子时会导致角色死亡。</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n<style>{`@keyframes spin { 0% { transform: rotate(0deg);} 100% { transform: rotate(360deg);} }\\n@keyframes progressBarFill { 0% { transform: scaleX(0);} 100% { transform: scaleX(1);} }`}</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}